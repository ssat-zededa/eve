// Copyright(c) 2017-2020 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

option go_package = "github.com/lf-edge/eve/api/go/config";
option java_package = "org.lfedge.eve.config";

import "config/devcommon.proto";
import "config/acipherinfo.proto";

message SignatureInfo {
  string intercertsurl = 1;
  string signercerturl = 2;
  bytes signature = 3;
}

enum DsType {
  DsUnknown = 0;
  DsHttp    = 1;
  DsHttps   = 2;
  DsS3      = 3;
  DsSFTP    = 4;
  DsContainerRegistry = 5;
  DsAzureBlob = 6;
}

// The DataStoreConfig contains common parameters for a give source of
// images aka ContentTrees, such as the credentials and server
message DatastoreConfig {
  string id = 100; // UUID

  DsType dType = 1;

  string fqdn = 2; // Fully-qualified domain name of server

  // to be deprecated, use cipherData instead
  string apiKey = 3;

  // to be deprecated, use cipherData instead
  string password = 4;

  // depending on datastore types, it could be bucket or path
  string dpath = 5;

  // Applies for some datastore types
  string region = 6;

  // contains the encrypted credentials
  CipherBlock cipherData = 7;
}


enum Format {
  FmtUnknown = 0;
  RAW   = 1;
  QCOW  = 2;
  QCOW2 = 3;
  VHD   = 4;
  VMDK  = 5;
  OVA   = 6;
  VHDX  = 7;
  CONTAINER = 8;
}

// XXX the Image will be deprecated and we will use ContentTree instead
message Image {
  UUIDandVersion uuidandversion = 1;
  // it could be relative path/name as well; appended to the datastore dpath
  string name = 2;

  string sha256 = 3; // EVE will verify this sha for the content
  Format iformat = 4;

  // if its signed image
  SignatureInfo siginfo = 5;

  string dsId = 6; // Datastore UUID
  int64 sizeBytes = 8;
}

enum Target {
  TgtUnknown = 0;
  Disk   = 1;
  Kernel = 2;
  Initrd = 3;
  RamDisk = 4;
  // XXX DeviceTree?
}

// XXX the DriveType will be deprecated when we deprecate Drive
enum DriveType {
  Unclassified = 0;
  CDROM   = 1;
  HDD     = 2;
  NET     = 3;

  // this type is allocate the empty disk of maxsizebytes specified
  HDD_EMPTY  = 4;
}

// XXX the Drive will be deprecated and we will use Volumes instead
message Drive {
  Image image = 1;
  bool readonly = 5;
  bool preserve = 6; // XXX deprecate; EVE always preserves unless there is a purge
  DriveType drvtype = 8;
  Target target = 9;
  // Initial image need to be resized to this size.
  // A value of 0 will indicate that no resizing is required
  int64 maxsizebytes = 10;
}

// ContentTree describes the top of some content tree. The controller
// needs to allocate a uuid for it, and that uuid will be sent by EVE
// in the ZInfoContentTree message
message ContentTree {
  string uuid = 1;
  string dsId  = 2; // UUID for DatastoreConfig
  string URL = 3;   // URL to append to datastore dpath
  Format iformat = 4;

  // The sha is for the top blob of the ContentTree
  string sha256 = 5;

  uint64 maxSizeBytes = 6; // used for capping resource consumption in EVE
  SignatureInfo siginfo = 7;
  string displayName = 8; // Optional friendly name echo'ed in info
}

// The protocol that the task will use to access the Volume
enum VolumeAccessProtocols {
  VAP_NONE = 0;
  VAP_9P = 1;
}

enum VolumeContentOriginType {
  VCOT_UNKNOWN = 0;
  VCOT_BLANK = 1;     // Create an empty directory/disk with specified size
  VCOT_DOWNLOAD = 2;  // Create from downloadContentTreeID
}

message VolumeContentOrigin {
  VolumeContentOriginType type = 1;
  string downloadContentTreeID = 2; // UUID for ContentTree
}

// The Volume describes a storage volume which should exist on the device.
// This can currently either be blank or created from a ContentTree
// If maxSizeBytes is zero it means unlimited by the controller. In that
// case EVE needs to determine how much space it can assign and limit any
// downloaded ContentTree and the created volume based on that calculated size.
message Volume {
  string uuid = 1;

  // origin of the volume content.
  VolumeContentOrigin origin = 2;

  // describes all the different ways how this Volume can
  // be offered to Tasks
  repeated VolumeAccessProtocols protocols = 3;

  // change in generationCount indicates that the mutated volume needs to be
  // purged and built from scratch. This is a generalization of the purge
  // command for an application unstance
  int64 generationCount = 4;

  // miscellaneous attributes of the Volume
  int64 maxsizebytes = 5;  // Used for capping resource consumption
  bool readonly = 6;       // Will be offered to tasks as read-only
  string displayName = 7;  // Optional friendly name echo'ed in info message
}
