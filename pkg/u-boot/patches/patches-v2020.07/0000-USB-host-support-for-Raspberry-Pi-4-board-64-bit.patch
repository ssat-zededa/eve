From patchwork Mon May 25 11:39:51 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297301
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=85.214.62.61; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=J3sWpItF;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de [85.214.62.61])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwBW5Bcfz9sSg
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:40:19 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id D4F29819AF;
 Mon, 25 May 2020 13:40:16 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="J3sWpItF";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id EDDA581784; Mon, 25 May 2020 13:40:14 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout1.w1.samsung.com (mailout1.w1.samsung.com
 [210.118.77.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id B262F813C6
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:11 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
 by mailout1.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114011euoutp01cb7c3d3fabbb175aefeebf5f53c76f6b~SQpGQxVv11437514375euoutp01M
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:11 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w1.samsung.com
 20200525114011euoutp01cb7c3d3fabbb175aefeebf5f53c76f6b~SQpGQxVv11437514375euoutp01M
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406811;
 bh=y/xHx6cn6ZNuvX3V5jxpugf8Q65fZIBo5wp4jEitdVo=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=J3sWpItFOx9VTDLrMYIPILDWMGpPAayKCfZh9R1ifbTTY8vXV1B1g4PUsMp84y2HR
 0Y/KYFh17U9sWNonHJZzNU/tKUFhsO+sX24e0xWEFPcCGnluQwseoinNvmz+hdKyTi
 U61rzLfvO3JWw+BHOF0nKV1QY14mk2mN+IB7qGVI=
Received: from eusmges2new.samsung.com (unknown [203.254.199.244]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTP id
 20200525114010eucas1p1ada0741eb7e953bac68b9e8052a1e4ab~SQpF5Wz0m2811028110eucas1p1T;
 Mon, 25 May 2020 11:40:10 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
 eusmges2new.samsung.com (EUCPMTA) with SMTP id F2.BB.60679.A9EABCE5; Mon, 25
 May 2020 12:40:10 +0100 (BST)
Received: from eusmtrp1.samsung.com (unknown [182.198.249.138]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114010eucas1p138f9b8607f616720fd3b482dcb820dcb~SQpFguGWy0866408664eucas1p1U;
 Mon, 25 May 2020 11:40:10 +0000 (GMT)
Received: from eusmgms1.samsung.com (unknown [182.198.249.179]) by
 eusmtrp1.samsung.com (KnoxPortal) with ESMTP id
 20200525114010eusmtrp1f7d7536a293a4cf008495106bb1e1728~SQpFgBoHR1781117811eusmtrp1Q;
 Mon, 25 May 2020 11:40:10 +0000 (GMT)
X-AuditID: cbfec7f4-0cbff7000001ed07-a8-5ecbae9aa433
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms1.samsung.com (EUCPMTA) with SMTP id F8.9B.08375.A9EABCE5; Mon, 25
 May 2020 12:40:10 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114010eusmtip192f88702394a7e8b0b2ca6f668052819~SQpFA8Vyy2560125601eusmtip14;
 Mon, 25 May 2020 11:40:10 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 1/9] usb: xhci: Add missing cache flush in the scratchpad
 array initialization
Date: Mon, 25 May 2020 13:39:51 +0200
Message-Id: <20200525113959.11886-2-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA0VSbUhTYRjl9X7sat24TckXE4xViFZ+E1eU0Ii6/QhEIyhoNvXqJJ2yqWUS
 TaOlpps5w1opJoQ1NTPH0plhM9McSinGZptaSR9rCyMNnFF5vav+nec857zneR5eAhE2YUFE
 rqyIlcskeSLcDzU+X5nYo7tvEUcNte+lu693YfS1mnR6wKXBaatHhdGdzxwC2qUqB3SLdgGj
 jbo2nB5yXcboHwYjoN0DVYKkDYxubhxnbipfoUyzbhRl+nQOATNu7wWM2qAHTJdhGmV6LGUp
 xAm/xCw2L7eElUfuO+Undei/gMIG37Pf7gz6KMG4oBr4EpCKg50LLUg18COE1F0AbYYKb7EE
 YJ/tEuBUQuo7gOqOC9WAWHe86/Fq2gBcdGjwfwbb3DTOGXAqGtYOq9fNAdQuaOsw+nAihHIC
 +GFxAOMa/lQm9Eypce5VlNoJPVXhHE1SCdBZVQn48UJg+4NBhMO+VCIcezq7ngypVgGcbHuB
 8KID0No9j/HYHzpHDN7dgqFFW4PyhosA1vS/EfBFHYBzIy3eiARon/CsT4FQYbDLFMnTydAx
 N4zyK2+CVvdmjkbWYL2xEeFpElaqhLx6B1zVN/rwOAheWfiN8piBX+0WlD+QBsBu/WOkDoTo
 /oe1AKAHgWyxIj+HVcTI2DMRCkm+oliWE5FZkP8QrH0ay6+RpV5g+plhBhQBRBtJusMiFmKS
 EkVpvhlAAhEFkKpDaxSZJSk9x8oL0uXFeazCDLYSqCiQjG39fFJI5UiK2NMsW8jK/3Z9CN8g
 JUg13QpunRp1O83io45sMvaqcv9MYvakJ+pIllValtbU1yqtL1a+z3xkCytPu2FzJ8Wdt5Ls
 mLF7dVtaiuGgqaj2aExu6PLr2eZPFa6ManFMpMbuJncXLR9Oh1qxfObJ7YaIxJeWpr7ct9v7
 P8bHHwt1zQ+kriCjW5JVQfeOa0WoQiqJDkfkCskfL1ngvTADAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrDLMWRmVeSWpSXmKPExsVy+t/xu7qz1p2OM9jySN5i44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0Mu4u+o1Y8EUzoqPSw8wNTCeZe9i
 5OCQEDCReLSZuYuRi0NIYCmjxLNH65gh4lIS81uUuhg5gUxhiT/Xutggaj4xStxo3cMMkmAT
 MJToPdrHCGKLCOhKNPasYwEpYhb4wiix6cBiNpBBwgKJEjMf6oOYLAKqEr86tUDKeQWsJV51
 djBCzJeXWL3hANhITgEbiVMH74HZQkA1M2c9Y5zAyLeAkWEVo0hqaXFuem6xoV5xYm5xaV66
 XnJ+7iZGYMhvO/Zz8w7GSxuDDzEKcDAq8fBarDkdJ8SaWFZcmXuIUYKDWUmEt80dKMSbklhZ
 lVqUH19UmpNafIjRFOimicxSosn5wHjMK4k3NDU0t7A0NDc2NzazUBLn7RA4GCMkkJ5Ykpqd
 mlqQWgTTx8TBKdXAaJp/dobwlV2dHP3+wZvFuhsrNQN2TA9kKnm1R2Q+17/u6Ru3duZUCd4T
 Wjgzwv6RQa7MhUmcXmbOh3zOWH5YtSGo7jrHgZTT789r/5km0ii6tNn2X+O92L4vd9/UOd6w
 afa4smph8B+5Zennj/lr2ucy62h9kKl6vnp9kF/3lbRgnwZuoUktSizFGYmGWsxFxYkAW2eo
 9o8CAAA=
X-CMS-MailID: 20200525114010eucas1p138f9b8607f616720fd3b482dcb820dcb
X-Msg-Generator: CA
X-RootMTR: 20200525114010eucas1p138f9b8607f616720fd3b482dcb820dcb
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114010eucas1p138f9b8607f616720fd3b482dcb820dcb
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114010eucas1p138f9b8607f616720fd3b482dcb820dcb@eucas1p1.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

In current code there is no cache flush after initializing the scratchpad
buffer array with the scratchpad buffer pointers. This leads to a failure
of the "slot enable" command on the rpi4 board (Broadcom STB PCIe
controller + VL805 USB hub) - the very first TRB transfer on the command
ring fails and there is a timeout while waiting for the command completion
event. After adding the missing cache flush everything seems to be working
as expected.

Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Reviewed-by: Bin Meng <bmeng.cn@gmail.com>
Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
Changes since v1:
 - none.
---
 drivers/usb/host/xhci-mem.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index 93450ee..729bdc3 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -393,6 +393,9 @@ static int xhci_scratchpad_alloc(struct xhci_ctrl *ctrl)
 		scratchpad->sp_array[i] = cpu_to_le64(ptr);
 	}
 
+	xhci_flush_cache((uintptr_t)scratchpad->sp_array,
+			 sizeof(u64) * num_sp);
+
 	return 0;
 
 fail_sp3:

From patchwork Mon May 25 11:39:52 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297303
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=85.214.62.61; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=loc+e1OU;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de [85.214.62.61])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwBx1V0jz9sRW
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:40:41 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id 5FAE081817;
 Mon, 25 May 2020 13:40:38 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="loc+e1OU";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id 3C62D81C62; Mon, 25 May 2020 13:40:20 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout1.w1.samsung.com (mailout1.w1.samsung.com
 [210.118.77.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id 9358281817
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:13 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
 by mailout1.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114013euoutp0115ae857833a1637f9a6d51404a7e4170~SQpIAf9Un1437514375euoutp01O
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:13 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w1.samsung.com
 20200525114013euoutp0115ae857833a1637f9a6d51404a7e4170~SQpIAf9Un1437514375euoutp01O
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406813;
 bh=mpc5rYw/U19wNz9z3l9qIGYqOM/GqAOeD9khN0UIZwU=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=loc+e1OUDokwyF8lGbCKWZl6ukjgDyGe/LCTnW5YuWJ1jO2TIc5Qky2urUDlLZjUh
 h7XQf4h0eyuZ608PL+GmU47xMwABAKNgt6xhnjvylmia6wWEJEw1nYisDaaPrbaf2g
 4jG867y288gNqZazsgWRR3xZl7LUpPOZa22YajfE=
Received: from eusmges1new.samsung.com (unknown [203.254.199.242]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTP id
 20200525114012eucas1p121c073d5a115a5bea0341e90bf80ff25~SQpHumLUA1614016140eucas1p1m;
 Mon, 25 May 2020 11:40:12 +0000 (GMT)
Received: from eucas1p2.samsung.com ( [182.198.249.207]) by
 eusmges1new.samsung.com (EUCPMTA) with SMTP id 98.94.61286.C9EABCE5; Mon, 25
 May 2020 12:40:12 +0100 (BST)
Received: from eusmtrp2.samsung.com (unknown [182.198.249.139]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTPA id
 20200525114012eucas1p2fe3523a8d33e6670f8c2877bd4799aca~SQpHbBkG42414324143eucas1p2V;
 Mon, 25 May 2020 11:40:12 +0000 (GMT)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180]) by
 eusmtrp2.samsung.com (KnoxPortal) with ESMTP id
 20200525114012eusmtrp20042c368d9a3123db07f9937ddf3a1df~SQpHZbqAa2713827138eusmtrp2E;
 Mon, 25 May 2020 11:40:12 +0000 (GMT)
X-AuditID: cbfec7f2-f0bff7000001ef66-dc-5ecbae9c7ece
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms2.samsung.com (EUCPMTA) with SMTP id 66.47.07950.C9EABCE5; Mon, 25
 May 2020 12:40:12 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114012eusmtip1b52942bd6a7c9b986571a1baa2dde427~SQpG45Sgj2560425604eusmtip1l;
 Mon, 25 May 2020 11:40:12 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>, Sergey Temerkhanov <s.temerkhanov@gmail.com>
Subject: [PATCH v4 2/9] usb: xhci: Use only 32-bit accesses in
 xhci_writeq/xhci_readq
Date: Mon, 25 May 2020 13:39:52 +0200
Message-Id: <20200525113959.11886-3-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFlrIKsWRmVeSWpSXmKPExsWy7djP87pz1p2OM5jy19xi44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLZbO2sdu8W3LNkaLt3s72R14
 PGbdP8vmMbvhIovHvFknWDx2zrrL7nH2zg5Gj74tqxg91m+5yuKx+XR1AEcUl01Kak5mWWqR
 vl0CV8bOyQtZCz4LVHzsWMzWwPiQt4uRk0NCwERi9cvtjF2MXBxCAisYJVYu3csG4XxhlJgx
 6wWU85lR4uGkVlaYlkXPd0ElljNKvO+7htCyb+FxZpAqNgFDid6jfYwgtoiAtsTNNduYQIqY
 BWYwSTTOvAg2SlggXOLapMVADRwcLAKqEjcfeoGYvALWEl8/mUAsk5dYveEA2EhOARuJUwfv
 MUPEV7FLXHtdAWG7SMze/IgRwhaWeHV8CzuELSPxf+d8sLUSAs2MEj27b7NDOBMYJe4fXwDV
 YS1x59wvNpDFzAKaEut36UOEHSXWLf0GdpqEAJ/EjbeCIGFmIHPStulQYV6JjjYhiGoVid+r
 pjNB2FIS3U/+s0CUeEi0bEyAhE4/o8TG3vOMExjlZyHsWsDIuIpRPLW0ODc9tdgwL7Vcrzgx
 t7g0L10vOT93EyMw4Zz+d/zTDsavl5IOMQpwMCrx8FqsOR0nxJpYVlyZe4hRgoNZSYS3zR0o
 xJuSWFmVWpQfX1Sak1p8iFGag0VJnNd40ctYIYH0xJLU7NTUgtQimCwTB6dUA2PSq92R0oaG
 n9Svf3f/UbLtb89K8xvuYYLszKsFfof7vH/Rpb89NiR3tQhH+DGOhZpn/066xa5Sm5N4Ndns
 UrGv0LkzZfJfr+Y1tKt/23jWa/F2w4/Pd3ys/b7l5EmpA3Yfd3x+/tRX9kWPrUq99Yc3/4Vv
 Wrds/7pzDb/fxplrC1tLZItajNyVWIozEg21mIuKEwFUVXwiNAMAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFmpkkeLIzCtJLcpLzFFi42I5/e/4Xd05607HGXxuVLbYOGM9q8XUnniL
 vW/62Sxu/GpjtVh75C67xZu2RkaLBZOfsFpsm7WczeLwm3ZWi6Wz9rFbfNuyjdHi7d5Odgce
 j1n3z7J5zG64yOIxb9YJFo+ds+6ye5y9s4PRo2/LKkaP9VuusnhsPl0dwBGlZ1OUX1qSqpCR
 X1xiqxRtaGGkZ2hpoWdkYqlnaGwea2VkqqRvZ5OSmpNZllqkb5egl7Fz8kLWgs8CFR87FrM1
 MD7k7WLk5JAQMJFY9HwXG4gtJLCUUeLa09AuRg6guJTE/BYliBJhiT/XuoBKuIBKPjFKtMw5
 zwKSYBMwlOg92scIYosI6Eo09qxjASliFljCJHFh4RNWkISwQKhE38HZTCBDWQRUJW4+9AIx
 eQWsJb5+MoGYLy+xesMBZhCbU8BG4tTBe8wQ51hLzJz1jHECI98CRoZVjCKppcW56bnFRnrF
 ibnFpXnpesn5uZsYgcG/7djPLTsYu94FH2IU4GBU4uG1WHM6Tog1say4MvcQowQHs5IIb5s7
 UIg3JbGyKrUoP76oNCe1+BCjKdBJE5mlRJPzgZGZVxJvaGpobmFpaG5sbmxmoSTO2yFwMEZI
 ID2xJDU7NbUgtQimj4mDU6qBUa8ku3r+vPDpvt9Pb7Xm09zJ82Lx9pA5H6vYbr5bYLTZava5
 noatK8/raVSd/b8r+6yXwZnEIA/XKPefcy4y6xfkpCUcy9xybQlToPrdMo5M8x4HznjF/Ale
 6V/yE6dvbHm1KXZmvnpZT5JceMe5FRqzrnyf6n90mdHy/xNdTHW4Z9RfC24UUWIpzkg01GIu
 Kk4EAGn7l4+UAgAA
X-CMS-MailID: 20200525114012eucas1p2fe3523a8d33e6670f8c2877bd4799aca
X-Msg-Generator: CA
X-RootMTR: 20200525114012eucas1p2fe3523a8d33e6670f8c2877bd4799aca
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114012eucas1p2fe3523a8d33e6670f8c2877bd4799aca
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114012eucas1p2fe3523a8d33e6670f8c2877bd4799aca@eucas1p2.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

There might be hardware configurations where 64-bit data accesses
to XHCI registers are not supported properly.  This patch removes
the readq/writeq so always two 32-bit accesses are used to read/write
64-bit XHCI registers, similarly as it is done in Linux kernel.

This patch fixes operation of the XHCI controller on RPI4 Broadcom
BCM2711 SoC based board, where the VL805 USB XHCI controller is
connected to the PCIe Root Complex, which is attached to the system
through the SCB bridge.

Even though the architecture is 64-bit the PCIe BAR is 32-bit and likely
the 64-bit wide register accesses initiated by the CPU are not properly
translated to a sequence of 32-bit PCIe accesses.
xhci_readq(), for example, always returns same value in upper and lower
32-bits, e.g. 0xabcd1234abcd1234 instead of 0x00000000abcd1234.

Cc: Sergey Temerkhanov <s.temerkhanov@gmail.com>
Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Reviewed-by: Bin Meng <bmeng.cn@gmail.com>
Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
Changes since v1:
 - none.
Changes since RFC:
 - dropped Kconfig option, switched to not using readq/writeq
   unconditionally.
---
 include/usb/xhci.h | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/include/usb/xhci.h b/include/usb/xhci.h
index 6017504..c16106a 100644
--- a/include/usb/xhci.h
+++ b/include/usb/xhci.h
@@ -1111,28 +1111,20 @@ static inline void xhci_writel(uint32_t volatile *regs, const unsigned int val)
  */
 static inline u64 xhci_readq(__le64 volatile *regs)
 {
-#if BITS_PER_LONG == 64
-	return readq(regs);
-#else
 	__u32 *ptr = (__u32 *)regs;
 	u64 val_lo = readl(ptr);
 	u64 val_hi = readl(ptr + 1);
 	return val_lo + (val_hi << 32);
-#endif
 }
 
 static inline void xhci_writeq(__le64 volatile *regs, const u64 val)
 {
-#if BITS_PER_LONG == 64
-	writeq(val, regs);
-#else
 	__u32 *ptr = (__u32 *)regs;
 	u32 val_lo = lower_32_bits(val);
 	/* FIXME */
 	u32 val_hi = upper_32_bits(val);
 	writel(val_lo, ptr);
 	writel(val_hi, ptr + 1);
-#endif
 }
 
 int xhci_hcd_init(int index, struct xhci_hccr **ret_hccr,

From patchwork Mon May 25 11:39:53 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297304
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=85.214.62.61; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=uBQ86G/P;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de [85.214.62.61])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwC95jwvz9sRW
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:40:53 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id BC91781B69;
 Mon, 25 May 2020 13:40:40 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="uBQ86G/P";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id E453C81C73; Mon, 25 May 2020 13:40:22 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout2.w1.samsung.com (mailout2.w1.samsung.com
 [210.118.77.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id 9C8EB813C5
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:15 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p1.samsung.com (unknown [182.198.249.206])
 by mailout2.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114014euoutp02a2085fc3748a2817daaa2291d60592e8~SQpJRtJD90123201232euoutp02e
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:14 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout2.w1.samsung.com
 20200525114014euoutp02a2085fc3748a2817daaa2291d60592e8~SQpJRtJD90123201232euoutp02e
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406814;
 bh=o2n59jAOXed94iksPXrzyyjRiAB6FlEj8rUQ47ogyyk=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=uBQ86G/PABdNZMlFRIGUV9/ufQfZnI9xHRlvFs8aDsICHMa+mUZYSB9jJ9zV+WCVg
 mGndEZQ3Vb+ivwNN4GukHAL8takmKjTVUJVgOwHpeTBKKK7ikeleLj9i7MDpHb/537
 AiMtUbod6N8bZOPZOxBVC9sD8OEs3Ic9seJQ2zpU=
Received: from eusmges1new.samsung.com (unknown [203.254.199.242]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTP id
 20200525114014eucas1p240a97888e51189fbc048f034f977a1dd~SQpJAq5YP2854728547eucas1p2N;
 Mon, 25 May 2020 11:40:14 +0000 (GMT)
Received: from eucas1p2.samsung.com ( [182.198.249.207]) by
 eusmges1new.samsung.com (EUCPMTA) with SMTP id D9.94.61286.E9EABCE5; Mon, 25
 May 2020 12:40:14 +0100 (BST)
Received: from eusmtrp1.samsung.com (unknown [182.198.249.138]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114013eucas1p1fd8be56fad4c2331a3b2b4bed48f7a02~SQpIoNYFd0865908659eucas1p1a;
 Mon, 25 May 2020 11:40:13 +0000 (GMT)
Received: from eusmgms1.samsung.com (unknown [182.198.249.179]) by
 eusmtrp1.samsung.com (KnoxPortal) with ESMTP id
 20200525114013eusmtrp166c13fe9a95fd20f495c4d165da077fb~SQpInqJVg1781117811eusmtrp1W;
 Mon, 25 May 2020 11:40:13 +0000 (GMT)
X-AuditID: cbfec7f2-f0bff7000001ef66-e2-5ecbae9ea484
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms1.samsung.com (EUCPMTA) with SMTP id 2B.9B.08375.D9EABCE5; Mon, 25
 May 2020 12:40:13 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114013eusmtip10505952a865fb55e951a9241da90e81a~SQpIJ_YCz2309623096eusmtip1o;
 Mon, 25 May 2020 11:40:13 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 3/9] pci: Move some PCIe register offset definitions to a
 common header
Date: Mon, 25 May 2020 13:39:53 +0200
Message-Id: <20200525113959.11886-4-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA0WSe0hTYRjG+zyXHVeT03Hol0rmKkIlL+UfJzQzCDoRWaF/RJa28uAlb2xq
 WViTQktNlyu0qXNJYM3L1K2h6cJWXmipGYpKXkBlqMyM0iIVzXm0/vu9z/s83wMvH4FQ5ZgL
 EZeUykqSxAkinI8aOv70HlTVmSP92hsouqFEi9FP86Noo7UQp4eWsjG69sMoj7ZmZwFarZjC
 aIOyCqffW3Mw+pfeAOg540NeyHZGOd6NM6WyPpRRKbtQplk5ymO6R5oAU6DXAEarH0AZnfn2
 OeIiPyiaTYhLZyW+wVf4sYoyj5TiXTcnn68BGbAIc4E9AckAWKobxXMBn6DIlwC2WvpRblgA
 cGawlccNPwFcWVXhWxF1TYkdt6gCcLmiGv8XKZ/OAzYXTvrDR+0FGywkveFwjWEjgZCzAFq+
 GzHbwpG8BFs0b9cLCQIl98Mn6vM2FJCBcKCN4crcYXV9G2JjezIIfnw3htiegWQlD37rq+dx
 phOwV65COHaEs536Td0NmhX5KBe4B2B+y1ceN8gBHO9UA84VCEd6lnBbM0J6Qu0bX04+DmsV
 zZhNhqQDHJrbaZORdSwyFCOcLIAPsinOvQ8ua4rtOHaBeVNrKMcMtNSPbZ60EMAJxRomB+7K
 /2VqADTAmU2TJsawUv8k9oaPVJwoTUuK8bmWnNgI1j+NebXzRxNY/HLVBEgCiHYI6BpzJIWJ
 06UZiSYACUQkFGSfXJcE0eKMW6wkOUqSlsBKTcCVQEXOgsOVM5cpMkacyl5n2RRWsrW1I+xd
 ZCBUnnXHoeLo3jxKxZtbyNRl/jZZ+enPXvFrh+Pnd39y6woIHm2Mv79SGt722tXoF3SXcgnv
 OJAwceSFXNc8Pznw2FcrD6vzLvpsdDeumco8NIPKqgbh2dP922RhZ+xO7YlwsiwKQvSSY4ec
 5rs6prN6ZBGA6vbyLAGhYxe0qTkiVBor9vdCJFLxX6GU0dwwAwAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrFLMWRmVeSWpSXmKPExsVy+t/xu7pz152OM9j80Mxi44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0MuYPEexYLpkxeOF/xkbGJ+JdDFy
 ckgImEgsWDODCcQWEljKKHGn06eLkQMoLiUxv0UJokRY4s+1LrYuRi6gkk+MEqfu3WcBSbAJ
 GEr0Hu1jBLFFBHQlGnvWsYAUMQt8YZTYdGAxG8ggYYEoiafL7UFMFgFViSkLAkFMXgFriasH
 PCDGy0us3nCAGcTmFLCROHXwHjPENdYSM2c9Y5zAyLeAkWEVo0hqaXFuem6xoV5xYm5xaV66
 XnJ+7iZGYLhvO/Zz8w7GSxuDDzEKcDAq8fBarDkdJ8SaWFZcmXuIUYKDWUmEt80dKMSbklhZ
 lVqUH19UmpNafIjRFOikicxSosn5wFjMK4k3NDU0t7A0NDc2NzazUBLn7RA4GCMkkJ5Ykpqd
 mlqQWgTTx8TBKdXAKHvPjv1h2cT+nwobZRdPMJ9s+69IcPejNRN3/cmLCPpqtkx9h6Rf1UPO
 RrdCD+O2jV9OqSxuWx618IHmDq56gRXnshIqHcr317Ad5jJ5oX9liq7uhD+HXLK/TphdzfJU
 jL1Q7Pr16rXLNk24KbuwVWPanNIEPcbiM8x79imwL9JcudhDPnTLTiWW4oxEQy3mouJEAAzr
 Do6NAgAA
X-CMS-MailID: 20200525114013eucas1p1fd8be56fad4c2331a3b2b4bed48f7a02
X-Msg-Generator: CA
X-RootMTR: 20200525114013eucas1p1fd8be56fad4c2331a3b2b4bed48f7a02
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114013eucas1p1fd8be56fad4c2331a3b2b4bed48f7a02
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114013eucas1p1fd8be56fad4c2331a3b2b4bed48f7a02@eucas1p1.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

Some PCI Express register offsets are currently defined in multiple
drivers, move them to a common header to avoid re-definitions and
as a pre-requisite for adding new PCIe driver.
While at it replace some spaces with tabs.

Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Reviewed-by: Bin Meng <bmeng.cn@gmail.com>
Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
Changes since v1:
 - none.
Changes since RFC:
 - whitespace clean up.
---
 drivers/pci/pci-rcar-gen3.c   |  8 --------
 drivers/pci/pcie_intel_fpga.c |  3 ---
 include/pci.h                 | 13 +++++++++++--
 3 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/drivers/pci/pci-rcar-gen3.c b/drivers/pci/pci-rcar-gen3.c
index 30eff67..393f1c9 100644
--- a/drivers/pci/pci-rcar-gen3.c
+++ b/drivers/pci/pci-rcar-gen3.c
@@ -117,14 +117,6 @@
 #define RCAR_PCI_MAX_RESOURCES	4
 #define MAX_NR_INBOUND_MAPS	6
 
-#define PCI_EXP_FLAGS		2		/* Capabilities register */
-#define PCI_EXP_FLAGS_TYPE	0x00f0		/* Device/Port type */
-#define PCI_EXP_TYPE_ROOT_PORT	0x4		/* Root Port */
-#define PCI_EXP_LNKCAP		12		/* Link Capabilities */
-#define PCI_EXP_LNKCAP_DLLLARC	0x00100000	/* Data Link Layer Link Active Reporting Capable */
-#define PCI_EXP_SLTCAP		20		/* Slot Capabilities */
-#define PCI_EXP_SLTCAP_PSN	0xfff80000	/* Physical Slot Number */
-
 enum {
 	RCAR_PCI_ACCESS_READ,
 	RCAR_PCI_ACCESS_WRITE,
diff --git a/drivers/pci/pcie_intel_fpga.c b/drivers/pci/pcie_intel_fpga.c
index 6a9f29c..69363a0 100644
--- a/drivers/pci/pcie_intel_fpga.c
+++ b/drivers/pci/pcie_intel_fpga.c
@@ -65,9 +65,6 @@
 #define IS_ROOT_PORT(pcie, bdf)				\
 		((PCI_BUS(bdf) == pcie->first_busno) ? true : false)
 
-#define PCI_EXP_LNKSTA		18	/* Link Status */
-#define PCI_EXP_LNKSTA_DLLLA	0x2000	/* Data Link Layer Link Active */
-
 /**
  * struct intel_fpga_pcie - Intel FPGA PCIe controller state
  * @bus: Pointer to the PCI bus
diff --git a/include/pci.h b/include/pci.h
index aff56b2..dfdbb32 100644
--- a/include/pci.h
+++ b/include/pci.h
@@ -471,10 +471,19 @@
 #define  PCI_EA_FIELD_MASK	0xfffffffc	/* For Base & Max Offset */
 
 /* PCI Express capabilities */
+#define PCI_EXP_FLAGS		2	/* Capabilities register */
+#define  PCI_EXP_FLAGS_TYPE	0x00f0	/* Device/Port type */
+#define  PCI_EXP_TYPE_ROOT_PORT 0x4	/* Root Port */
 #define PCI_EXP_DEVCAP		4	/* Device capabilities */
-#define  PCI_EXP_DEVCAP_FLR     0x10000000 /* Function Level Reset */
+#define  PCI_EXP_DEVCAP_FLR	0x10000000 /* Function Level Reset */
 #define PCI_EXP_DEVCTL		8	/* Device Control */
-#define  PCI_EXP_DEVCTL_BCR_FLR 0x8000  /* Bridge Configuration Retry / FLR */
+#define  PCI_EXP_DEVCTL_BCR_FLR	0x8000  /* Bridge Configuration Retry / FLR */
+#define PCI_EXP_LNKCAP		12	/* Link Capabilities */
+#define  PCI_EXP_LNKCAP_DLLLARC	0x00100000 /* Data Link Layer Link Active Reporting Capable */
+#define PCI_EXP_LNKSTA		18	/* Link Status */
+#define  PCI_EXP_LNKSTA_DLLLA	0x2000	/* Data Link Layer Link Active */
+#define PCI_EXP_SLTCAP		20	/* Slot Capabilities */
+#define  PCI_EXP_SLTCAP_PSN	0xfff80000 /* Physical Slot Number */
 
 /* Include the ID list */
 

From patchwork Mon May 25 11:39:54 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297305
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=2a01:238:438b:c500:173d:9f52:ddab:ee01; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=WvLG1rYA;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de
 [IPv6:2a01:238:438b:c500:173d:9f52:ddab:ee01])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwCQ6gztz9sRW
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:41:06 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id CE0FC81C72;
 Mon, 25 May 2020 13:40:42 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="WvLG1rYA";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id 2BD8B81C67; Mon, 25 May 2020 13:40:26 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout2.w1.samsung.com (mailout2.w1.samsung.com
 [210.118.77.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id A1AD9813C6
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:16 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p1.samsung.com (unknown [182.198.249.206])
 by mailout2.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114015euoutp021dccc2271f1670b0a39f43f22ca4d212~SQpKjEIvF0123201232euoutp02h
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:15 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout2.w1.samsung.com
 20200525114015euoutp021dccc2271f1670b0a39f43f22ca4d212~SQpKjEIvF0123201232euoutp02h
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406816;
 bh=3E0AOgx9hU8sLyjssq8h9uGtoMBKiYQYmWKYKj8g+7M=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=WvLG1rYAUEXMlovr+pJGW3N3Zbm9xmIhMPDw23eamZWg5c2PbGuGpOS3/NFsdNrQL
 d6kRY3xq9iMlmFRVCx/Z4FE7tsIXamRDuAC/mcQd06STSWxRbos8pQRdtWsIhbRPfD
 6oE9SG+1QrdWZaOWkNjxE74Oi+ArxGcUbsfmd53U=
Received: from eusmges3new.samsung.com (unknown [203.254.199.245]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTP id
 20200525114015eucas1p1fef13ad341860b99ca632b1712e2a44b~SQpKPUX2G1612016120eucas1p1J;
 Mon, 25 May 2020 11:40:15 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
 eusmges3new.samsung.com (EUCPMTA) with SMTP id 81.C8.60698.F9EABCE5; Mon, 25
 May 2020 12:40:15 +0100 (BST)
Received: from eusmtrp2.samsung.com (unknown [182.198.249.139]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114015eucas1p14cf7c56b8d52740f00df0ba9111b9d95~SQpJuGHFd1612016120eucas1p1I;
 Mon, 25 May 2020 11:40:15 +0000 (GMT)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180]) by
 eusmtrp2.samsung.com (KnoxPortal) with ESMTP id
 20200525114015eusmtrp2963f5de95be3161783ca0cb5a8b1f689~SQpJte54x2713827138eusmtrp2K;
 Mon, 25 May 2020 11:40:15 +0000 (GMT)
X-AuditID: cbfec7f5-a29ff7000001ed1a-db-5ecbae9f53e8
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms2.samsung.com (EUCPMTA) with SMTP id A9.47.07950.F9EABCE5; Mon, 25
 May 2020 12:40:15 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114014eusmtip17c87fdeda4876e7b581a9b32c96bd401~SQpJMzzt_2560425604eusmtip1m;
 Mon, 25 May 2020 11:40:14 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 4/9] rpi4: shorten a mapping for the DRAM
Date: Mon, 25 May 2020 13:39:54 +0200
Message-Id: <20200525113959.11886-5-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA0VSe0hTYRzl233saq1uU9iHBsYqw8KpWHBBCaOiW0bZX0GUtvKi1jZlV02z
 P2bCTEsdSqkLcoWlTmuaY6ixMB8pLu0pKToNmZYyH2UudD7admf9d875ncM5fHwEIqzCAogU
 RTqjVEhlYtwXNb1dHgitemGJD58vDqKaKgwYdf9eAmW2l+DU0Ioao553WfmUXZ0LKF2ZDaNM
 2hqc6rTnY5TDaALUrLmAH7OF1o734/RD1UeUfqTtRelWrZVP94+2ALrYqAe0wTiI0s2WnDji
 gm90IiNLyWSUYYcv+yY7VnVo2jc8a3mjCFeBfqwQ+BCQPAidw1+RQuBLCMlaAFdr573kN4Dd
 9jUeRxYBVA+uIZsRjb7ae6gB8HNeHf4v8t20xHO7cDICFnUXAzf2Jw/A4QaTJ4GQMwBOLZhd
 7QThR0bDB7k+bg9K7oU/23r4biwgo+Dsej3KtQXB+sZ2T7OPy973ZsyzD5LP+PCXsdo76Rjs
 e+f0BvzgTI+Rz+GdcKO1iscF8gC892qEzxENgOM9OsC5ouDowAruXoSQIdDQFsbJR6B6stMj
 Q3IbHJrd4ZYRFyw1lSOcLIB31ELOvQc69eU8DgfAu7YN7xwajpVPYdwDlQBon8nna0CQ9n+Z
 DgA9EDEZrDyJYSMVzA0JK5WzGYokydVU+Uvg+jaW9Z6lFvB69UoHIAkg3iqgGizxQkyayWbL
 OwAkELG/QH3CJQkSpdk3GWVqgjJDxrAdIJBAxSJB5JPpS0IySZrOXGeYNEa5eeURPgEqEB6Y
 VRspso1gj1PmvqyVGUj/a5IYynC+rnQxWxgbe8vv4smz2uDECtOhXc717Z8m5SHI/ESppGtU
 dDT46YfAhHbFjPyMPOe0eFaFWf+8/wGOZ9gcA02RC/s0vY7d8SHM7epzMtlE5dQIa06zlgw3
 n6qcnosuaAxtjKrujBuLF6NssjRiP6JkpX8BROVk9jIDAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrHLMWRmVeSWpSXmKPExsVy+t/xu7rz152OMzi3ktli44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0Mv49mcBS8EDtoqf/3vZGhjPsnYx
 cnJICJhITFi1hKmLkYtDSGApo8TV7XOYuxg5gBJSEvNblCBqhCX+XOtig6j5xCixuHEVI0iC
 TcBQovdoH5gtIqAr0dizjgWkiFngC6PEpgOL2UAGCQvYSExr5ASpYRFQlfi46zg7iM0rYC3x
 9t9qFogF8hKrNxxgBrE5gcpPHbwHZgsB1cyc9YxxAiPfAkaGVYwiqaXFuem5xUZ6xYm5xaV5
 6XrJ+bmbGIFhv+3Yzy07GLveBR9iFOBgVOLhtVhzOk6INbGsuDL3EKMEB7OSCG+bO1CINyWx
 siq1KD++qDQntfgQoynQUROZpUST84ExmVcSb2hqaG5haWhubG5sZqEkztshcDBGSCA9sSQ1
 OzW1ILUIpo+Jg1OqgXFtIJOxvf3BrpOza9QTusweVS38df7N0l0rVm/Ol/PPX3LiUJvuG8ap
 e7j1FarmLFKK3bTwUte/+l33t1RFsh5qK06I+aUQwtoS/lSHLVU8P7pDJ2BnVceUOTctq+ym
 veVzeXGIQUPhqQZ/wb+9xxgCX3fortyy03YZ0+pHX7Sz9zVmhjgWJCmxFGckGmoxFxUnAgBR
 cMySkQIAAA==
X-CMS-MailID: 20200525114015eucas1p14cf7c56b8d52740f00df0ba9111b9d95
X-Msg-Generator: CA
X-RootMTR: 20200525114015eucas1p14cf7c56b8d52740f00df0ba9111b9d95
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114015eucas1p14cf7c56b8d52740f00df0ba9111b9d95
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114015eucas1p14cf7c56b8d52740f00df0ba9111b9d95@eucas1p1.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

From: Marek Szyprowski <m.szyprowski@samsung.com>

Remove the overlap between DRAM and device's IO area.

Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
Changes since v1:
 - none.
---
 arch/arm/mach-bcm283x/init.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/arm/mach-bcm283x/init.c b/arch/arm/mach-bcm283x/init.c
index 9966d6c..4295356 100644
--- a/arch/arm/mach-bcm283x/init.c
+++ b/arch/arm/mach-bcm283x/init.c
@@ -38,7 +38,7 @@ static struct mm_region bcm2711_mem_map[] = {
 	{
 		.virt = 0x00000000UL,
 		.phys = 0x00000000UL,
-		.size = 0xfe000000UL,
+		.size = 0xfc000000UL,
 		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
 			 PTE_BLOCK_INNER_SHARE
 	}, {

From patchwork Mon May 25 11:39:55 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297306
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=85.214.62.61; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=n4QAhAN+;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de [85.214.62.61])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwCf1ThXz9sRW
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:41:18 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id 117FF81C7B;
 Mon, 25 May 2020 13:40:46 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="n4QAhAN+";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id 8359C81C62; Mon, 25 May 2020 13:40:29 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout2.w1.samsung.com (mailout2.w1.samsung.com
 [210.118.77.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id 229F881A66
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:18 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p1.samsung.com (unknown [182.198.249.206])
 by mailout2.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114016euoutp021b0b80b8aa6908df52bca6336a59339f~SQpLcvuiU0304703047euoutp02H
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:16 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout2.w1.samsung.com
 20200525114016euoutp021b0b80b8aa6908df52bca6336a59339f~SQpLcvuiU0304703047euoutp02H
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406816;
 bh=ozB4PjYhWsS5ZxKpmPa8mdxicOKm0FHHREyxFBafxKE=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=n4QAhAN+BEPXbQ5L3a8Qn37rLNs8bb2q89WU7lDzeVhQ2yxPdU7AEKTYs7/mfqfKw
 DocykIhgVeEyYSsoFcsesstWE8qDPXL28fG/7zuzE1wKaMdmAtHmUC96m32zfGXSOE
 axL4ZRsbkz/XsNC7CwihyVk2FKEwgin9p/VmtTes=
Received: from eusmges3new.samsung.com (unknown [203.254.199.245]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTP id
 20200525114016eucas1p2d13b2bc11e7e44b778cd52b61edc54df~SQpLPmObA2414324143eucas1p2a;
 Mon, 25 May 2020 11:40:16 +0000 (GMT)
Received: from eucas1p2.samsung.com ( [182.198.249.207]) by
 eusmges3new.samsung.com (EUCPMTA) with SMTP id A3.C8.60698.0AEABCE5; Mon, 25
 May 2020 12:40:16 +0100 (BST)
Received: from eusmtrp2.samsung.com (unknown [182.198.249.139]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114016eucas1p1d9166ae099e725d3284d27241a79b805~SQpK1mvl50867208672eucas1p1d;
 Mon, 25 May 2020 11:40:16 +0000 (GMT)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180]) by
 eusmtrp2.samsung.com (KnoxPortal) with ESMTP id
 20200525114016eusmtrp2f6177034fcf6689cf39990d49d59898e~SQpK0-x1S2713827138eusmtrp2O;
 Mon, 25 May 2020 11:40:16 +0000 (GMT)
X-AuditID: cbfec7f5-a0fff7000001ed1a-e4-5ecbaea0ba3c
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms2.samsung.com (EUCPMTA) with SMTP id FA.47.07950.0AEABCE5; Mon, 25
 May 2020 12:40:16 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114015eusmtip1afe3d7fef8540524e5fd96030e32482c~SQpKTYaNC2309623096eusmtip1q;
 Mon, 25 May 2020 11:40:15 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 5/9] rpi4: add a mapping for the PCIe XHCI controller
 MMIO registers (ARM 64bit)
Date: Mon, 25 May 2020 13:39:55 +0200
Message-Id: <20200525113959.11886-6-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA0WSa0gUYRSG+3ZndkZrZVwtT1qI2wUt1MR+DClmkDhQUREFZWprDirqajte
 Mv+shVuZrpKauV1cC1TM3LR1vectMxQ1sbykpsgWKEpBFl5C23G0/r3nPc/7ncPhI8WyItyR
 jFImsCqlIkYuscZM75b63fWVPSGHVtL201UPDTidnxlKN89lS+iRZQ1Ov3w7QdBzmjRE63PN
 OG3SlUrojrnbOP3baEL0fPNdwn8ro5vslTCP1AMY81T3HmPqdRME0ztehxitsRwxBuMnjHnd
 k3qGvGTtG87GRCWxKk+/K9aRmYZOIr7f9vrC6ixSoxqbDGRFAnUYcosWRRnImpRRZQh0X6tx
 oVhAMFjQKuIpGfUTganj5GaiUL+MBKgUQVtHi+hfQvMhh+ApCeUFWZ1axGt76iCMVpjWITE1
 i+Dbj2acb9hRLDSlayW8xqh9kJk2tO5LKR8YnTGLhHHO8OJVq5jXVpQvdLd9EfMPAVVCQJ6p
 Dxeg47A0XbYRsIPZLiMh6F2wVl8kEgK3EGQ2jhFCkYNgskuPBMoHxvuWLWuQlv3cwNDgKdjH
 oKmiGfE2UDYwMm/L22KLvG8qEAu2FO5oZAK9F1bKCzZWcIR75jVM0AysVeZLhAtlI2h4lE3k
 IGfd/2F6hMqRA5vIxUawnLeSTfbgFLFcojLC42pcbDWyfJue1a5fdejNn7B2RJFIvk1KV/SE
 yHBFEpcS246AFMvtpZpAiyUNV6TcYFVxoarEGJZrR04kJneQej+bCZZREYoENppl41nVZldE
 WjmqUYnmnEFLiXa4YCeGHhS7rNaGtMT51Zy2D1h6UjYW7f7RP3qhrjbygkPGVCN2NiH5yM6B
 58VeF9V+8YNOUS5Kt4xUdV5CsI2KyQJnbk/3zaOFa1JmpsrV9fOUrPi8XZT2Wnp/bqBj0HfV
 Ys0wOXnKbA64bNyy3SR5HDas3j0dGiTHuEiF1wGxilP8BTfNGboyAwAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrPLMWRmVeSWpSXmKPExsVy+t/xu7oL1p2OM3jxi9ti44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0MvoWX+UveC8YMWXf68YGxi38nUx
 cnJICJhIzFzwi7GLkYtDSGApo8TtTTvYuxg5gBJSEvNblCBqhCX+XOtig6j5xCjx49hZRpAE
 m4ChRO/RPjBbREBXorFnHQtIEbPAF0aJTQcWs4EkhAWSJZadaAArYhFQlehpvMYKYvMKWEvc
 fPmECWKDvMTqDQeYQWxOARuJUwfvgdlCQDUzZz1jnMDIt4CRYRWjSGppcW56brGRXnFibnFp
 Xrpecn7uJkZg4G879nPLDsaud8GHGAU4GJV4eC3WnI4TYk0sK67MPcQowcGsJMLb5g4U4k1J
 rKxKLcqPLyrNSS0+xGgKdNREZinR5HxgVOaVxBuaGppbWBqaG5sbm1koifN2CByMERJITyxJ
 zU5NLUgtgulj4uCUamDkMWJ163DZV3bPlTPyR0M0f7DJ5ZjvbtcPM3qmxjJv52JnlXz/+9yF
 Ba62Cqk33x+dNcumOiG2kSfirtHM75MttS+uPikgt337qtUfunJ6Qmau19CRLun0fzopqkBp
 6txD71LzKi/brN7jIXHjxdNLSrkHznqELlTvOBZ7tvzg1G+3lk80/7pdiaU4I9FQi7moOBEA
 AhJWCpICAAA=
X-CMS-MailID: 20200525114016eucas1p1d9166ae099e725d3284d27241a79b805
X-Msg-Generator: CA
X-RootMTR: 20200525114016eucas1p1d9166ae099e725d3284d27241a79b805
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114016eucas1p1d9166ae099e725d3284d27241a79b805
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114016eucas1p1d9166ae099e725d3284d27241a79b805@eucas1p1.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

From: Marek Szyprowski <m.szyprowski@samsung.com>

Create a non-cacheable mapping for the 0x600000000 physical memory region,
where MMIO registers for the PCIe XHCI controller are instantiated by the
PCIe bridge.

Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
Changes since v3:
 - none.
Changes since v2:
 -  fixed typo MAX_MAP_MAX_ENTRIES -> MEM_MAP_MAX_ENTRIES
Changes since v1:
 - none.
---
 arch/arm/mach-bcm283x/init.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-bcm283x/init.c b/arch/arm/mach-bcm283x/init.c
index 4295356..9f5bca3 100644
--- a/arch/arm/mach-bcm283x/init.c
+++ b/arch/arm/mach-bcm283x/init.c
@@ -11,10 +11,15 @@
 #include <dm/device.h>
 #include <fdt_support.h>
 
+#define BCM2711_RPI4_PCIE_XHCI_MMIO_PHYS	0x600000000UL
+#define BCM2711_RPI4_PCIE_XHCI_MMIO_SIZE	0x800000UL
+
 #ifdef CONFIG_ARM64
 #include <asm/armv8/mmu.h>
 
-static struct mm_region bcm283x_mem_map[] = {
+#define MEM_MAP_MAX_ENTRIES (4)
+
+static struct mm_region bcm283x_mem_map[MEM_MAP_MAX_ENTRIES] = {
 	{
 		.virt = 0x00000000UL,
 		.phys = 0x00000000UL,
@@ -34,7 +39,7 @@ static struct mm_region bcm283x_mem_map[] = {
 	}
 };
 
-static struct mm_region bcm2711_mem_map[] = {
+static struct mm_region bcm2711_mem_map[MEM_MAP_MAX_ENTRIES] = {
 	{
 		.virt = 0x00000000UL,
 		.phys = 0x00000000UL,
@@ -49,6 +54,13 @@ static struct mm_region bcm2711_mem_map[] = {
 			 PTE_BLOCK_NON_SHARE |
 			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
 	}, {
+		.virt = BCM2711_RPI4_PCIE_XHCI_MMIO_PHYS,
+		.phys = BCM2711_RPI4_PCIE_XHCI_MMIO_PHYS,
+		.size = BCM2711_RPI4_PCIE_XHCI_MMIO_SIZE,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
+			 PTE_BLOCK_NON_SHARE |
+			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
+	}, {
 		/* List terminator */
 		0,
 	}
@@ -71,7 +83,7 @@ static void _rpi_update_mem_map(struct mm_region *pd)
 {
 	int i;
 
-	for (i = 0; i < 2; i++) {
+	for (i = 0; i < MEM_MAP_MAX_ENTRIES; i++) {
 		mem_map[i].virt = pd[i].virt;
 		mem_map[i].phys = pd[i].phys;
 		mem_map[i].size = pd[i].size;

From patchwork Mon May 25 11:39:56 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297309
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=2a01:238:438b:c500:173d:9f52:ddab:ee01; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=knmG7asO;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de
 [IPv6:2a01:238:438b:c500:173d:9f52:ddab:ee01])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwDF1knZz9sT1
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:41:49 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id 8650381CA8;
 Mon, 25 May 2020 13:40:55 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="knmG7asO";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id C3B5481A4E; Mon, 25 May 2020 13:40:32 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout2.w1.samsung.com (mailout2.w1.samsung.com
 [210.118.77.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id A249081B69
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:18 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
 by mailout2.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114018euoutp02a1ee14384a1c87959f1d13c86d79daae~SQpMd9GPS0304603046euoutp02K
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:18 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout2.w1.samsung.com
 20200525114018euoutp02a1ee14384a1c87959f1d13c86d79daae~SQpMd9GPS0304603046euoutp02K
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406818;
 bh=OpdhDxRWqzyn+8uM0s0N5fA3WtvbCG7Kez/vs8PQxrM=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=knmG7asOGl9MWsWqt9078wmPLA0jnITwAsahLIJirEpCyvNT+59iuXbGRWhktej00
 RTc8PsbdogxfSTwjOTHESYdb+PFN+j/QkSuoxzzQCbeKKgDpIFWT1WJN9ffFKXNDIM
 mn34/+/F3eQcAIG/RGqjvfiWpryc2dovT0fU7Ab0=
Received: from eusmges3new.samsung.com (unknown [203.254.199.245]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTP id
 20200525114017eucas1p21549dfe9a169e3bf1b158b30705a2b78~SQpMGnh8I2854728547eucas1p2T;
 Mon, 25 May 2020 11:40:17 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
 eusmges3new.samsung.com (EUCPMTA) with SMTP id 05.C8.60698.1AEABCE5; Mon, 25
 May 2020 12:40:17 +0100 (BST)
Received: from eusmtrp1.samsung.com (unknown [182.198.249.138]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTPA id
 20200525114017eucas1p2c9fa0e56eeb828d05891b8bf4545ad9c~SQpLzKV8-3086930869eucas1p2r;
 Mon, 25 May 2020 11:40:17 +0000 (GMT)
Received: from eusmgms1.samsung.com (unknown [182.198.249.179]) by
 eusmtrp1.samsung.com (KnoxPortal) with ESMTP id
 20200525114017eusmtrp108fb186e01e078735157a657fa030704~SQpLyh8Yc1781117811eusmtrp1e;
 Mon, 25 May 2020 11:40:17 +0000 (GMT)
X-AuditID: cbfec7f5-a29ff7000001ed1a-ed-5ecbaea14015
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms1.samsung.com (EUCPMTA) with SMTP id DD.9B.08375.1AEABCE5; Mon, 25
 May 2020 12:40:17 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114016eusmtip1b9151dc9e8634ce33139d954a2386cfe~SQpLSzq-l2561125611eusmtip1x;
 Mon, 25 May 2020 11:40:16 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 6/9] linux/bitfield.h: Add primitives for manipulating
 bitfields both in host- and fixed-endian
Date: Mon, 25 May 2020 13:39:56 +0200
Message-Id: <20200525113959.11886-7-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA0WSe0hTYRjG+TyXHa3JaSp+aGCNFFLywiQPKGEkdP5RjP4JKXXmYRPdXNu0
 1AjNmLflJTNjWmlBXmZOc00tlrbUqVMz0tLUVLxAS0NMA2+Z82D993ue93mfFz4+AuE9wtyI
 BKmSkUuFSXzcATX0bAydqm60RPvPVXpRzQ91GFWmjqGMS0U4NbapwqgXXVMcakmVBaiq0nmM
 MmhqcOr9Ug5G/dYbALVszOOEHqI104M4XZH5EaUfa3pRul0zxaEHJ9sAXaivB7ROP4rSLZaM
 SCLKISSeSUpIZeR+Z2IdxFOzakxW53Ija7gfzwR1R/KBPQHJQKjN/ozlAweCR9YC2DuZh7Ni
 DcD5kUrAil8ANj1ZwQ5WdNplO3ZQA+CqdoPzb0VXq0JtKZwMgHe7C4GNnUkfON5g2N9ASCuA
 iyvG/SonUgl/tvYhNkZJT5g3u7TnEwSXDIY7I9fYax5Q29S5H7EnQ2D/u2+IrQeSzznQalwH
 tjwkw+D45DE27wStZj2H5aPQUqpG2Xw2gOo3ExxWFAM4ba4CbCoYTg5t4rYihDwJda/9WPss
 vN36DGP7HeHY8v6DIXt4z1COsDYX5qp4bPoE3Kovt2PZDRbM76Is07B0uwG3MY8sAnB4AS8G
 Hpr/t6oAqAeuTIpCImIUAilz3VchlChSpCLfq8mSl2Dv01j+mNfbwNvtOBMgCcA/zKUaLNE8
 TJiqSJOYACQQvjNXdX7P4sYL09IZeXKMPCWJUZiAO4HyXbmCp9+v8EiRUMkkMoyMkR9M7Qh7
 t0ygjSpI7AmTzjR7qmX5QaGLgluqr32vwju/TMz5nA6fCRLesRvocA+JEF+4bI6aS/hUIShb
 GM3J7e5qiitRDojF59rzNrwDhzeaqcqIB+mx/taLu03Rhh+OAT7EVvWO3wcvU0tkY4XoZhEJ
 XDjTx2XVzZfWGksG7++2j/MzVn06+KhCLAzwRuQK4V/V21ZUMAMAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrHLMWRmVeSWpSXmKPExsVy+t/xu7oL152OMzh0mt9i44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0Mu4+7CHtWClaEXjhVNsDYwrBbsY
 OTkkBEwk1q9+y9TFyMUhJLCUUeLv9X+MXYwcQAkpifktShA1whJ/rnWxQdR8YpRY3N/PDJJg
 EzCU6D3axwhiiwjoSjT2rGMBKWIW+MIosenAYjaQhLBAkcS+h1fBilgEVCU6H75hBVnAK2At
 8fdKIcQCeYnVGw6AzeQUsJE4dfAemC0EVDJz1jPGCYx8CxgZVjGKpJYW56bnFhvqFSfmFpfm
 pesl5+duYgSG/bZjPzfvYLy0MfgQowAHoxIPr8Wa03FCrIllxZW5hxglOJiVRHjb3IFCvCmJ
 lVWpRfnxRaU5qcWHGE2BbprILCWanA+MybySeENTQ3MLS0NzY3NjMwslcd4OgYMxQgLpiSWp
 2ampBalFMH1MHJxSDYydLL8U+yxCzWTCfuh8TbN+uSPzvrXj/yXT9OZ5GHyYob/ikMesIxFf
 A29JT1C0SixIm6DM2FuzWir7/tFdUw61TZ/v8/sb45mndzeY/ng5/8FlluOaEdVt5212XfhZ
 86XCPeRTufKfc6ni12+nXTo47azu/Qb5wvUR+hafd16ymvqiZOW3RY2hSizFGYmGWsxFxYkA
 P30uOZECAAA=
X-CMS-MailID: 20200525114017eucas1p2c9fa0e56eeb828d05891b8bf4545ad9c
X-Msg-Generator: CA
X-RootMTR: 20200525114017eucas1p2c9fa0e56eeb828d05891b8bf4545ad9c
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114017eucas1p2c9fa0e56eeb828d05891b8bf4545ad9c
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114017eucas1p2c9fa0e56eeb828d05891b8bf4545ad9c@eucas1p2.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

From: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>

Imports Al Viro's original Linux commit 00b0c9b82663a, which contains
an in depth explanation and two fixes from Johannes Berg:
 e7d4a95da86e0 "bitfield: fix *_encode_bits()",
 37a3862e12382 "bitfield: add u8 helpers".

Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
[s.nawrocki: added empty lines between functions and macros]
Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
---
Changes since v3:
 - none.
Changes since v2:
 - added some more missing whitespaces as pointed out by checkpatch.pl.
Changes since v1:
 - added empty lines between functions and macros.
Changes since RFC:
 - new patch.
---
 include/linux/bitfield.h | 52 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/include/linux/bitfield.h b/include/linux/bitfield.h
index 8b9d6ff..7ad8b08 100644
--- a/include/linux/bitfield.h
+++ b/include/linux/bitfield.h
@@ -103,4 +103,56 @@
 		(typeof(_mask))(((_reg) & (_mask)) >> __bf_shf(_mask));	\
 	})
 
+extern void __compiletime_error("value doesn't fit into mask")
+__field_overflow(void);
+extern void __compiletime_error("bad bitfield mask")
+__bad_mask(void);
+
+static __always_inline u64 field_multiplier(u64 field)
+{
+	if ((field | (field - 1)) & ((field | (field - 1)) + 1))
+		__bad_mask();
+	return field & -field;
+}
+
+static __always_inline u64 field_mask(u64 field)
+{
+	return field / field_multiplier(field);
+}
+
+#define ____MAKE_OP(type, base, to, from)				\
+static __always_inline __##type type##_encode_bits(base v, base field)	\
+{									\
+	if (__builtin_constant_p(v) && (v & ~field_mask(field)))	\
+		__field_overflow();					\
+	return to((v & field_mask(field)) * field_multiplier(field));	\
+}									\
+static __always_inline __##type type##_replace_bits(__##type old,	\
+					base val, base field)		\
+{									\
+	return (old & ~to(field)) | type##_encode_bits(val, field);	\
+}									\
+static __always_inline void type##p_replace_bits(__##type * p,		\
+					base val, base field)		\
+{									\
+	*p = (*p & ~to(field)) | type##_encode_bits(val, field);	\
+}									\
+static __always_inline base type##_get_bits(__##type v, base field)	\
+{									\
+	return (from(v) & field) / field_multiplier(field);		\
+}
+
+#define __MAKE_OP(size)							\
+	____MAKE_OP(le##size, u##size, cpu_to_le##size, le##size##_to_cpu) \
+	____MAKE_OP(be##size, u##size, cpu_to_be##size, be##size##_to_cpu) \
+	____MAKE_OP(u##size, u##size, ,)
+
+____MAKE_OP(u8, u8, ,)
+__MAKE_OP(16)
+__MAKE_OP(32)
+__MAKE_OP(64)
+
+#undef __MAKE_OP
+#undef ____MAKE_OP
+
 #endif

From patchwork Mon May 25 11:39:57 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297307
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=2a01:238:438b:c500:173d:9f52:ddab:ee01; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=tfs17fd7;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de
 [IPv6:2a01:238:438b:c500:173d:9f52:ddab:ee01])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwCr4ZxLz9sRW
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:41:28 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id 9D19D81C95;
 Mon, 25 May 2020 13:40:48 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="tfs17fd7";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id 0E139819B6; Mon, 25 May 2020 13:40:31 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout1.w1.samsung.com (mailout1.w1.samsung.com
 [210.118.77.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id B09E081C56
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:19 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p1.samsung.com (unknown [182.198.249.206])
 by mailout1.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114019euoutp01ecf3b6981bb987d669872f9c6fa2ec2c~SQpNozz3x1437514375euoutp01Y
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:19 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w1.samsung.com
 20200525114019euoutp01ecf3b6981bb987d669872f9c6fa2ec2c~SQpNozz3x1437514375euoutp01Y
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406819;
 bh=lsYkTHukKCKj1UHOPMJyWO+BAcDFvVEsOZ5HCUJ5mJo=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=tfs17fd7Ft5yO8mqiaxXVPTVJqgDut3DNaokzYjA8GZKIBVMFSGoPzKP3V5m36IIy
 u3mqNpDKqRMjS/90eHYYTJzPOSeDTHO8wxYQLP9mB7A4OKY6i4UYXu/xF5E2ykvZnu
 k7Yr56aJyb0WMxKtysjJ8fKdGyB3zsQLRaqJ85Uk=
Received: from eusmges1new.samsung.com (unknown [203.254.199.242]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTP id
 20200525114018eucas1p28b2520a8dcd8e5b65a3df401633bb976~SQpNPo4Pn2868228682eucas1p2X;
 Mon, 25 May 2020 11:40:18 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
 eusmges1new.samsung.com (EUCPMTA) with SMTP id 7E.94.61286.2AEABCE5; Mon, 25
 May 2020 12:40:18 +0100 (BST)
Received: from eusmtrp2.samsung.com (unknown [182.198.249.139]) by
 eucas1p2.samsung.com (KnoxPortal) with ESMTPA id
 20200525114018eucas1p2fe145f25bc488ebffeb49221e7cb18af~SQpM3yvmu2414324143eucas1p2f;
 Mon, 25 May 2020 11:40:18 +0000 (GMT)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180]) by
 eusmtrp2.samsung.com (KnoxPortal) with ESMTP id
 20200525114018eusmtrp29d63d8ee4936eddd0cfe4ecef53926eb~SQpM3IjXx2713827138eusmtrp2U;
 Mon, 25 May 2020 11:40:18 +0000 (GMT)
X-AuditID: cbfec7f2-f0bff7000001ef66-f7-5ecbaea2c094
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms2.samsung.com (EUCPMTA) with SMTP id DC.47.07950.2AEABCE5; Mon, 25
 May 2020 12:40:18 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114017eusmtip1f1257384ec74094441045b82e5bba099~SQpMT9_px2309623096eusmtip1s;
 Mon, 25 May 2020 11:40:17 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 7/9] pci: Add some PCI Express capability register offset
 definitions
Date: Mon, 25 May 2020 13:39:57 +0200
Message-Id: <20200525113959.11886-8-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA0WSfUhTYRTGe3fvtuty9jol32yhjD40SxsaXJhUQuaFEIKgP4y0lReV3LR9
 WBaUspg2pw7DrAlmkhl+TdcaLlNrajOHwgTL/JqRBYpGqBlaaV6v0X+/9znPc87h8BKYqJIb
 TGQoNbRKKc+U8AS4/e3K4OGaZnfykSpnNNn6wMIly40pZMdcKY8cWdVzyaaeCT45p88HZPW9
 aS5pN9fxyO65Ai65bLMDcr7jLv/EdsrsHeBRlXkenKoy9+GUwzzBpwbG2wBVYqsHlMU2jFPP
 3TfPEEmC2FQ6MyOHVkUduyhIr8pv4WeP+V1f9BqwPFDsawA+BIIx6LHJCwxAQIjgM4B0k7U4
 UxDBJYDWPT4sLwL0x0EZALEZ+F0ex8p1AK0Vadjsht3RWr2Z5UEpKu4tAQwHwgj0sdHOYUwY
 nAXo6/cOLlMIgEmo+X0nxjAO9yGn7QWHYSGUoS5XO5/dLgQ1tLze9PjAWNT/ZhJjGiFYw0cm
 jwVjNzqJRgvjWX8AmnXZtrJitO54xGH9OoCM7WN89mECyOuqBqxLhsYHV3lMIwyGI8vLKFaO
 Q0+ap3C2vx8amfdnZGwDy+wVW2OFqFAvYt170a/6Cg7Lwahoeh1nmUJNniYOe6BSgApcT3km
 EGL+P6wagHoQRGvVijRaLVXS1yLVcoVaq0yLvJylsIKNL+Necy20gR9Dl5wAEkDiKyQb3cki
 rjxHnatwAkRgkkChPmFDEqbKc2/QqqwUlTaTVjvBbgKXBAmja2YuiGCaXENfoelsWvWvyiF8
 gvOAsW8oMbRTVpb4xZXRE+mN6Tq/M+fU/m0jU9rTIMCKbHeGRsPP6g7Fi44qG6Bspai3vBaG
 usLE55ZWmjm3UhWuOP8wrVH+rTvpQKd+DU+M+BAfa31YcD9xV+8rpWZZGiYenzmev9Dvnh+O
 KcDcV6vEnz/93PEuKuH2Hp0VlqRJcHW6XHoQU6nlfwHNf9/SLgMAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrHLMWRmVeSWpSXmKPExsVy+t/xu7qL1p2OM5jwX8xi44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0MuY17iBveA2X8Xn+13MDYy9PF2M
 HBwSAiYSf6Y6djFycQgJLGWU2LD/PgtEXEpifotSFyMnkCks8edaFxtEzSdGiYmHtjKBJNgE
 DCV6j/YxgtgiAroSjT3rWECKmAW+MEpsOrCYDSQhLBAhcf3nN2YQm0VAVeLQFohmXgFrif3H
 d7NDbJCXWL3hAFgNp4CNxKmD98BsIaCambOeMU5g5FvAyLCKUSS1tDg3PbfYSK84Mbe4NC9d
 Lzk/dxMjMOy3Hfu5ZQdj17vgQ4wCHIxKPLwWa07HCbEmlhVX5h5ilOBgVhLhbXMHCvGmJFZW
 pRblxxeV5qQWH2I0BTpqIrOUaHI+MCbzSuINTQ3NLSwNzY3Njc0slMR5OwQOxggJpCeWpGan
 phakFsH0MXFwSjUwZrLHXXzu97Ao305cXqjFLtf5L/O1eesur9ybairz0evr648N4RVf7lXb
 3tzAqb1+jsmssD/5m92rGk7ttHQJSlWzWpS+n0M/6MivYwphQn0NQaF99eu5j21dZc3dfWXN
 2v4ZKilyd5deejN9xknd/Wa739TZvkhg15N9W8j34OOP2Oy57bueKrEUZyQaajEXFScCAFck
 +yiRAgAA
X-CMS-MailID: 20200525114018eucas1p2fe145f25bc488ebffeb49221e7cb18af
X-Msg-Generator: CA
X-RootMTR: 20200525114018eucas1p2fe145f25bc488ebffeb49221e7cb18af
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114018eucas1p2fe145f25bc488ebffeb49221e7cb18af
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114018eucas1p2fe145f25bc488ebffeb49221e7cb18af@eucas1p2.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

Add PCI Express capability definitions required by the Broadcom
STB PCIe controller driver.

Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
Reviewed-by: Bin Meng <bmeng.cn@gmail.com>
Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
---
Changes since v3:
 - none.
Changes since v2:
 - added Current Link Speed defines.
Changes since v1:
 - none.
Changes since RFC:
 - ensure the entries are added in order, sorted by ascending
   address values.
---
 include/pci.h | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/include/pci.h b/include/pci.h
index dfdbb32..ff5f620 100644
--- a/include/pci.h
+++ b/include/pci.h
@@ -479,11 +479,20 @@
 #define PCI_EXP_DEVCTL		8	/* Device Control */
 #define  PCI_EXP_DEVCTL_BCR_FLR	0x8000  /* Bridge Configuration Retry / FLR */
 #define PCI_EXP_LNKCAP		12	/* Link Capabilities */
+#define  PCI_EXP_LNKCAP_SLS	0x0000000f /* Supported Link Speeds */
+#define  PCI_EXP_LNKCAP_MLW	0x000003f0 /* Maximum Link Width */
 #define  PCI_EXP_LNKCAP_DLLLARC	0x00100000 /* Data Link Layer Link Active Reporting Capable */
 #define PCI_EXP_LNKSTA		18	/* Link Status */
+#define  PCI_EXP_LNKSTA_CLS	0x000f	/* Current Link Speed */
+#define  PCI_EXP_LNKSTA_CLS_2_5GB 0x0001 /* Current Link Speed 2.5GT/s */
+#define  PCI_EXP_LNKSTA_CLS_5_0GB 0x0002 /* Current Link Speed 5.0GT/s */
+#define  PCI_EXP_LNKSTA_CLS_8_0GB 0x0003 /* Current Link Speed 8.0GT/s */
+#define  PCI_EXP_LNKSTA_NLW	0x03f0	/* Negotiated Link Width */
+#define  PCI_EXP_LNKSTA_NLW_SHIFT 4	/* start of NLW mask in link status */
 #define  PCI_EXP_LNKSTA_DLLLA	0x2000	/* Data Link Layer Link Active */
 #define PCI_EXP_SLTCAP		20	/* Slot Capabilities */
 #define  PCI_EXP_SLTCAP_PSN	0xfff80000 /* Physical Slot Number */
+#define PCI_EXP_LNKCTL2		48	/* Link Control 2 */
 
 /* Include the ID list */
 

From patchwork Mon May 25 11:39:58 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297310
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=85.214.62.61; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=joWPDU8F;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de [85.214.62.61])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwDR4bBkz9sRW
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:41:59 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id 2AB2B81CB0;
 Mon, 25 May 2020 13:40:59 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="joWPDU8F";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id 9B1C2819AF; Mon, 25 May 2020 13:40:34 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,URIBL_BLOCKED autolearn=ham
 autolearn_force=no version=3.4.2
Received: from mailout1.w1.samsung.com (mailout1.w1.samsung.com
 [210.118.77.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id 9BD8781817
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:20 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
 by mailout1.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114020euoutp013ed8c2eaad146c3c7fe79f5d303a9fd9~SQpOaqSJy1437514375euoutp01Z
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:20 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w1.samsung.com
 20200525114020euoutp013ed8c2eaad146c3c7fe79f5d303a9fd9~SQpOaqSJy1437514375euoutp01Z
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406820;
 bh=0YJW1k9dQrxfu0325v0o7GmxvuBrsatAx840C+X5jEc=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=joWPDU8FFNP13KsPUBxhBzPxaRJVLNZB8a5slABUVSFlvTE9x6u+mjoxMGIyM5OWh
 WUF1LB0fcO4uBBiSqq6Gz/4a+xxOGSgMa9cJcSzmtGU2T6JHx/qDgAySSIp2Qkv3rq
 JgYDWefAIl/ck+/q8SRyee7hmwlGhKroAjBOJyNo=
Received: from eusmges3new.samsung.com (unknown [203.254.199.245]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTP id
 20200525114019eucas1p1ad09cdd90cf488dfc9c10cdfa53a76ad~SQpOOYMG51613216132eucas1p1f;
 Mon, 25 May 2020 11:40:19 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
 eusmges3new.samsung.com (EUCPMTA) with SMTP id E8.C8.60698.3AEABCE5; Mon, 25
 May 2020 12:40:19 +0100 (BST)
Received: from eusmtrp1.samsung.com (unknown [182.198.249.138]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114019eucas1p104eb5b1054ba4e3538ad84b8df4945a3~SQpN8Q6Ca0867208672eucas1p1h;
 Mon, 25 May 2020 11:40:19 +0000 (GMT)
Received: from eusmgms1.samsung.com (unknown [182.198.249.179]) by
 eusmtrp1.samsung.com (KnoxPortal) with ESMTP id
 20200525114019eusmtrp121599023e62dfc59dffadb884a6d0b2f~SQpN7q56I1781117811eusmtrp1m;
 Mon, 25 May 2020 11:40:19 +0000 (GMT)
X-AuditID: cbfec7f5-a29ff7000001ed1a-f9-5ecbaea3455a
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms1.samsung.com (EUCPMTA) with SMTP id CF.9B.08375.3AEABCE5; Mon, 25
 May 2020 12:40:19 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114019eusmtip141720ea5d99ee9dedaec5726699d5456~SQpNW5gPJ2561425614eusmtip10;
 Mon, 25 May 2020 11:40:18 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 8/9] pci: Add driver for Broadcom BCM2711 SoC PCIe
 controller
Date: Mon, 25 May 2020 13:39:58 +0200
Message-Id: <20200525113959.11886-9-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFlrAKsWRmVeSWpSXmKPExsWy7djPc7qL152OM5j4wMRi44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI4rJJSc3JLEst0rdL4MqY
 /NKo4M0mxoq+f/dZGhivTWTsYuTkkBAwkfi2YAprFyMXh5DACkaJ/ostbBDOF0aJhp/NLBDO
 Z0aJ7TuuMsG0tDyeD9WynFHiZu9vVriWD9/PsIFUsQkYSvQe7QNbIiKgLXFzzTYmkCJmgVeM
 Es8+7GUFSQgLBEms/vWdHcRmEVCV6G6fAraCV8Ba4u6Sk1AXykus3nCAGcTmFLCROHXwHjPI
 IAmBRewS9x71QxW5SOycdIUdwhaWeHV8C5QtI3F6cg8LREMzo0TP7tvsEM4ERon7xxdAdVtL
 3Dn3C+huDqD7NCXW79IHMSUEHCWOvCiGMPkkbrwVBClmBjInbZvODBHmlehoE4KYoSLxe9V0
 aAhJSXQ/+c8CYXtITPjxCRqM/cAAbrvJOIFRfhbCrgWMjKsYxVNLi3PTU4uN81LL9YoTc4tL
 89L1kvNzNzEC083pf8e/7mDc9yfpEKMAB6MSD6/FmtNxQqyJZcWVuYcYJTiYlUR429yBQrwp
 iZVVqUX58UWlOanFhxilOViUxHmNF72MFRJITyxJzU5NLUgtgskycXBKNTCaOPqK3clb/XP3
 RIWah9OuZhkHF32a07cy8RfvVMXrPE/5y5f+KLiosP9OVyuvivwVkxkl3fOsSxOcDLNSj6zV
 0H6qu8ejhuHNYya/F3qBb9bYXTz+60SSVJ2jgOCKgmTmnd1P+Kbqdeh/CJ8Sxztnybl7H+p4
 Q3cV519qPz1Z/PPmSa1Lpy1WYinOSDTUYi4qTgQAgqpxITMDAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrPLMWRmVeSWpSXmKPExsVy+t/xu7qL152OMzg9Rd5i44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI0rMpyi8tSVXIyC8usVWK
 NrQw0jO0tNAzMrHUMzQ2j7UyMlXSt7NJSc3JLEst0rdL0MuY/NKo4M0mxoq+f/dZGhivTWTs
 YuTkkBAwkWh5PJ+1i5GLQ0hgKaPEso/dQA4HUEJKYn6LEkSNsMSfa11sEDWfGCUmrz/FApJg
 EzCU6D3aBzZIREBXorFnHQtIEbPAF0aJTQcWs4EMEhYIkNh5wh6khkVAVaK7fQoTiM0rYC1x
 d8lJqCPkJVZvOMAMYnMK2EicOngPzBYCqpk56xnjBEa+BYwMqxhFUkuLc9Nziw31ihNzi0vz
 0vWS83M3MQIDf9uxn5t3MF7aGHyIUYCDUYmH12LN6Tgh1sSy4srcQ4wSHMxKIrxt7kAh3pTE
 yqrUovz4otKc1OJDjKZAR01klhJNzgdGZV5JvKGpobmFpaG5sbmxmYWSOG+HwMEYIYH0xJLU
 7NTUgtQimD4mDk6pBsbMhf+CHx9ntXzY+djAknkf85WX2pKPShlOcvwLWSe876yA6V4/31C5
 m6Vi/orveBONNhypK5xauu7CfI1L3hJXX7cfvNEgIvszwVvwo/cb+Y18LYseiTFEbMstcn/2
 gj19989ldtmtU1wMo1lzXCrnfD7M7bRgmVF2cqhVR+b1tX2cAYttJJRYijMSDbWYi4oTAeIc
 GieSAgAA
X-CMS-MailID: 20200525114019eucas1p104eb5b1054ba4e3538ad84b8df4945a3
X-Msg-Generator: CA
X-RootMTR: 20200525114019eucas1p104eb5b1054ba4e3538ad84b8df4945a3
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114019eucas1p104eb5b1054ba4e3538ad84b8df4945a3
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114019eucas1p104eb5b1054ba4e3538ad84b8df4945a3@eucas1p1.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

This patch adds basic driver PCI Express controller found on Broadcom
set-top-box SoCs, e.g. BCM2711.
The code is based on Linux upstream driver (pcie-brcmstb.c) with MSI
handling removed. The inbound access memory region is not currently
parsed from dma-ranges DT property and a fixed 3GB region is used.

The patch has been tested on RPI4 board, i.e. on BCM2711 SoC with VL805
USB Host Controller.

Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
---
Changes since v3:
 - none.
Changes since v2 (mostly addressing Simon's review comments):
 - removed MDO_RD_DONE, MDIO_WT_DONE macro definitions,
 - updated the Kconfig entry help text,
 - reordered #include entries to match the coding style,
 - s/udev/dev,
 - s/ENODEV/EINVAL in brcm_pcie_probe() and brcm_pcie_config_address()
   functions,
 - Simplified brcm_pcie_mdio_{read, write} functions (readl_poll_timeout),
 - shortened register bit fields macro definitions,
 - dropped brcm_pcie_perst_set() and brcm_pcie_bridge_sw_init_set()
   function in favour of direct clrbits_le32/setbits_le32 calls,
 - use setbits_le32/clrbits_le32/clrsetbits_le32 instead of
   readl(), u32p_replace_bits(), writel() sequence
 - simplified brcm_pcie_config_address(), brcm_pcie_set_gen() functions,
 - changed reset pulse delay to 100 us,
 - Replaced FIELD_GET() with open coded bitwise operations,
 - brcm_cpie_cfg_index() function merged into brcm_pcie_config_address(),
 - use standard PCI PCI_EXP_LNKSTA_CLS_* link speed defines
 - added kernel-doc function comments.

Changes since v1:
 - fixed argument in brcm_pcie_set_ssc() function call,
 - changed rc_bar2_size assignment to value 0xC0000000, as in upstream
   devicetree.
Changes since RFC:
 - reworked to align with current Linux mainline version and u-boot
   driver by Nicolas Saenz Julienne.
---
 drivers/pci/Kconfig        |   9 +
 drivers/pci/Makefile       |   1 +
 drivers/pci/pcie_brcmstb.c | 623 +++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 633 insertions(+)
 create mode 100644 drivers/pci/pcie_brcmstb.c

diff --git a/drivers/pci/Kconfig b/drivers/pci/Kconfig
index 437cd9a..543bd46 100644
--- a/drivers/pci/Kconfig
+++ b/drivers/pci/Kconfig
@@ -204,5 +204,15 @@
 	help
 	  Say Y here if you want to enable PCIe controller support on
 	  Rockchip SoCs.
+
+config PCI_BRCMSTB
+	bool "Broadcom STB PCIe controller"
+	depends on DM_PCI
+	depends on ARCH_BCM283X
+	help
+	  Say Y here if you want to enable support for PCIe controller
+	  on Broadcom set-top-box (STB) SoCs.
+	  This driver currently supports only BCM2711 SoC and RC mode
+	  of the controller.

 endif
diff --git a/drivers/pci/Makefile b/drivers/pci/Makefile
index c051ecc..3e53b1f 100644
--- a/drivers/pci/Makefile
+++ b/drivers/pci/Makefile
@@ -42,4 +42,5 @@ obj-$(CONFIG_PCI_PHYTIUM) += pcie_phytium.o
 obj-$(CONFIG_PCIE_INTEL_FPGA) += pcie_intel_fpga.o
 obj-$(CONFIG_PCI_KEYSTONE) += pcie_dw_ti.o
 obj-$(CONFIG_PCIE_MEDIATEK) += pcie_mediatek.o
+obj-$(CONFIG_PCI_BRCMSTB) += pcie_brcmstb.o
 obj-$(CONFIG_PCIE_ROCKCHIP) += pcie_rockchip.o pcie_rockchip_phy.o
diff --git a/drivers/pci/pcie_brcmstb.c b/drivers/pci/pcie_brcmstb.c
new file mode 100644
index 0000000..dade79e
--- /dev/null
+++ b/drivers/pci/pcie_brcmstb.c
@@ -0,0 +1,623 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Broadcom STB PCIe controller driver
+ *
+ * Copyright (C) 2020 Samsung Electronics Co., Ltd.
+ *
+ * Based on upstream Linux kernel driver:
+ * drivers/pci/controller/pcie-brcmstb.c
+ * Copyright (C) 2009 - 2017 Broadcom
+ *
+ * Based driver by Nicolas Saenz Julienne
+ * Copyright (C) 2020 Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
+ */
+
+#include <common.h>
+#include <errno.h>
+#include <dm.h>
+#include <dm/ofnode.h>
+#include <pci.h>
+#include <asm/io.h>
+#include <linux/bitfield.h>
+#include <linux/log2.h>
+#include <linux/iopoll.h>
+
+/* Offset of the mandatory PCIe capability config registers */
+#define BRCM_PCIE_CAP_REGS				0x00ac
+
+/* The PCIe controller register offsets */
+#define PCIE_RC_CFG_VENDOR_SPECIFIC_REG1		0x0188
+#define  VENDOR_SPECIFIC_REG1_ENDIAN_MODE_BAR2_MASK	0xc
+#define  VENDOR_SPECIFIC_REG1_LITTLE_ENDIAN		0x0
+
+#define PCIE_RC_CFG_PRIV1_ID_VAL3			0x043c
+#define  CFG_PRIV1_ID_VAL3_CLASS_CODE_MASK		0xffffff
+
+#define PCIE_RC_DL_MDIO_ADDR				0x1100
+#define PCIE_RC_DL_MDIO_WR_DATA				0x1104
+#define PCIE_RC_DL_MDIO_RD_DATA				0x1108
+
+#define PCIE_MISC_MISC_CTRL				0x4008
+#define  MISC_CTRL_SCB_ACCESS_EN_MASK			0x1000
+#define  MISC_CTRL_CFG_READ_UR_MODE_MASK		0x2000
+#define  MISC_CTRL_MAX_BURST_SIZE_MASK			0x300000
+#define  MISC_CTRL_MAX_BURST_SIZE_128			0x0
+#define  MISC_CTRL_SCB0_SIZE_MASK			0xf8000000
+
+#define PCIE_MISC_CPU_2_PCIE_MEM_WIN0_LO		0x400c
+#define PCIE_MEM_WIN0_LO(win)	\
+		PCIE_MISC_CPU_2_PCIE_MEM_WIN0_LO + ((win) * 4)
+
+#define PCIE_MISC_CPU_2_PCIE_MEM_WIN0_HI		0x4010
+#define PCIE_MEM_WIN0_HI(win)	\
+		PCIE_MISC_CPU_2_PCIE_MEM_WIN0_HI + ((win) * 4)
+
+#define PCIE_MISC_RC_BAR1_CONFIG_LO			0x402c
+#define  RC_BAR1_CONFIG_LO_SIZE_MASK			0x1f
+
+#define PCIE_MISC_RC_BAR2_CONFIG_LO			0x4034
+#define  RC_BAR2_CONFIG_LO_SIZE_MASK			0x1f
+#define PCIE_MISC_RC_BAR2_CONFIG_HI			0x4038
+
+#define PCIE_MISC_RC_BAR3_CONFIG_LO			0x403c
+#define  RC_BAR3_CONFIG_LO_SIZE_MASK			0x1f
+
+#define PCIE_MISC_PCIE_STATUS				0x4068
+#define  STATUS_PCIE_PORT_MASK				0x80
+#define  STATUS_PCIE_PORT_SHIFT				7
+#define  STATUS_PCIE_DL_ACTIVE_MASK			0x20
+#define  STATUS_PCIE_DL_ACTIVE_SHIFT			5
+#define  STATUS_PCIE_PHYLINKUP_MASK			0x10
+#define  STATUS_PCIE_PHYLINKUP_SHIFT			4
+
+#define PCIE_MISC_CPU_2_PCIE_MEM_WIN0_BASE_LIMIT	0x4070
+#define  MEM_WIN0_BASE_LIMIT_LIMIT_MASK			0xfff00000
+#define  MEM_WIN0_BASE_LIMIT_BASE_MASK			0xfff0
+#define  MEM_WIN0_BASE_LIMIT_BASE_HI_SHIFT		12
+#define PCIE_MEM_WIN0_BASE_LIMIT(win)	\
+	 PCIE_MISC_CPU_2_PCIE_MEM_WIN0_BASE_LIMIT + ((win) * 4)
+
+#define PCIE_MISC_CPU_2_PCIE_MEM_WIN0_BASE_HI		0x4080
+#define  MEM_WIN0_BASE_HI_BASE_MASK			0xff
+#define PCIE_MEM_WIN0_BASE_HI(win)	\
+	 PCIE_MISC_CPU_2_PCIE_MEM_WIN0_BASE_HI + ((win) * 8)
+
+#define PCIE_MISC_CPU_2_PCIE_MEM_WIN0_LIMIT_HI		0x4084
+#define  PCIE_MEM_WIN0_LIMIT_HI_LIMIT_MASK		0xff
+#define PCIE_MEM_WIN0_LIMIT_HI(win)	\
+	 PCIE_MISC_CPU_2_PCIE_MEM_WIN0_LIMIT_HI + ((win) * 8)
+
+#define PCIE_MISC_HARD_PCIE_HARD_DEBUG			0x4204
+#define  PCIE_HARD_DEBUG_CLKREQ_DEBUG_ENABLE_MASK	0x2
+#define  PCIE_HARD_DEBUG_SERDES_IDDQ_MASK		0x08000000
+
+#define PCIE_MSI_INTR2_CLR				0x4508
+#define PCIE_MSI_INTR2_MASK_SET				0x4510
+
+#define PCIE_EXT_CFG_DATA				0x8000
+
+#define PCIE_EXT_CFG_INDEX				0x9000
+#define  PCIE_EXT_BUSNUM_SHIFT				20
+#define  PCIE_EXT_SLOT_SHIFT				15
+#define  PCIE_EXT_FUNC_SHIFT				12
+
+#define PCIE_RGR1_SW_INIT_1				0x9210
+#define  RGR1_SW_INIT_1_PERST_MASK			0x1
+#define  RGR1_SW_INIT_1_INIT_MASK			0x2
+
+/* PCIe parameters */
+#define BRCM_NUM_PCIE_OUT_WINS				4
+
+/* MDIO registers */
+#define MDIO_PORT0					0x0
+#define MDIO_DATA_MASK					0x7fffffff
+#define MDIO_DATA_SHIFT					0
+#define MDIO_PORT_MASK					0xf0000
+#define MDIO_PORT_SHIFT					16
+#define MDIO_REGAD_MASK					0xffff
+#define MDIO_REGAD_SHIFT				0
+#define MDIO_CMD_MASK					0xfff00000
+#define MDIO_CMD_SHIFT					20
+#define MDIO_CMD_READ					0x1
+#define MDIO_CMD_WRITE					0x0
+#define MDIO_DATA_DONE_MASK				0x80000000
+#define SSC_REGS_ADDR					0x1100
+#define SET_ADDR_OFFSET					0x1f
+#define SSC_CNTL_OFFSET					0x2
+#define SSC_CNTL_OVRD_EN_MASK				0x8000
+#define SSC_CNTL_OVRD_VAL_MASK				0x4000
+#define SSC_STATUS_OFFSET				0x1
+#define SSC_STATUS_SSC_MASK				0x400
+#define SSC_STATUS_SSC_SHIFT				10
+#define SSC_STATUS_PLL_LOCK_MASK			0x800
+#define SSC_STATUS_PLL_LOCK_SHIFT			11
+
+/**
+ * struct brcm_pcie - the PCIe controller state
+ * @base: Base address of memory mapped IO registers of the controller
+ * @gen: Non-zero value indicates limitation of the PCIe controller operation
+ *       to a specific generation (1, 2 or 3)
+ * @ssc: true indicates active Spread Spectrum Clocking operation
+ */
+struct brcm_pcie {
+	void __iomem		*base;
+
+	int			gen;
+	bool			ssc;
+};
+
+/**
+ * brcm_pcie_encode_ibar_size() - Encode the inbound "BAR" region size
+ * @size: The inbound region size
+ *
+ * This function converts size of the inbound "BAR" region to the non-linear
+ * values of the PCIE_MISC_RC_BAR[123]_CONFIG_LO register SIZE field.
+ *
+ * Return: The encoded inbound region size
+ */
+static int brcm_pcie_encode_ibar_size(u64 size)
+{
+	int log2_in = ilog2(size);
+
+	if (log2_in >= 12 && log2_in <= 15)
+		/* Covers 4KB to 32KB (inclusive) */
+		return (log2_in - 12) + 0x1c;
+	else if (log2_in >= 16 && log2_in <= 37)
+		/* Covers 64KB to 32GB, (inclusive) */
+		return log2_in - 15;
+
+	/* Something is awry so disable */
+	return 0;
+}
+
+/**
+ * brcm_pcie_rc_mode() - Check if PCIe controller is in RC mode
+ * @pcie: Pointer to the PCIe controller state
+ *
+ * The controller is capable of serving in both RC and EP roles.
+ *
+ * Return: true for RC mode, false for EP mode.
+ */
+static bool brcm_pcie_rc_mode(struct brcm_pcie *pcie)
+{
+	u32 val;
+
+	val = readl(pcie->base + PCIE_MISC_PCIE_STATUS);
+
+	return (val & STATUS_PCIE_PORT_MASK) >> STATUS_PCIE_PORT_SHIFT;
+}
+
+/**
+ * brcm_pcie_link_up() - Check whether the PCIe link is up
+ * @pcie: Pointer to the PCIe controller state
+ *
+ * Return: true if the link is up, false otherwise.
+ */
+static bool brcm_pcie_link_up(struct brcm_pcie *pcie)
+{
+	u32 val, dla, plu;
+
+	val = readl(pcie->base + PCIE_MISC_PCIE_STATUS);
+	dla = (val & STATUS_PCIE_DL_ACTIVE_MASK) >> STATUS_PCIE_DL_ACTIVE_SHIFT;
+	plu = (val & STATUS_PCIE_PHYLINKUP_MASK) >> STATUS_PCIE_PHYLINKUP_SHIFT;
+
+	return dla && plu;
+}
+
+static int brcm_pcie_config_address(const struct udevice *dev, pci_dev_t bdf,
+				    uint offset, void **paddress)
+{
+	struct brcm_pcie *pcie = dev_get_priv(dev);
+	unsigned int pci_bus = PCI_BUS(bdf);
+	unsigned int pci_dev = PCI_DEV(bdf);
+	unsigned int pci_func = PCI_FUNC(bdf);
+	int idx;
+
+	/*
+	 * Busses 0 (host PCIe bridge) and 1 (its immediate child)
+	 * are limited to a single device each
+	 */
+	if (pci_bus < 2 && pci_dev > 0)
+		return -EINVAL;
+
+	/* Accesses to the RC go right to the RC registers */
+	if (pci_bus == 0) {
+		*paddress = pcie->base + offset;
+		return 0;
+	}
+
+	/* For devices, write to the config space index register */
+	idx = (pci_bus << PCIE_EXT_BUSNUM_SHIFT)
+		| (pci_dev << PCIE_EXT_SLOT_SHIFT)
+		| (pci_func << PCIE_EXT_FUNC_SHIFT);
+
+	writel(idx, pcie->base + PCIE_EXT_CFG_INDEX);
+	*paddress = pcie->base + PCIE_EXT_CFG_DATA + offset;
+
+	return 0;
+}
+
+static int brcm_pcie_read_config(const struct udevice *bus, pci_dev_t bdf,
+				 uint offset, ulong *valuep,
+				 enum pci_size_t size)
+{
+	return pci_generic_mmap_read_config(bus, brcm_pcie_config_address,
+					    bdf, offset, valuep, size);
+}
+
+static int brcm_pcie_write_config(struct udevice *bus, pci_dev_t bdf,
+				  uint offset, ulong value,
+				  enum pci_size_t size)
+{
+	return pci_generic_mmap_write_config(bus, brcm_pcie_config_address,
+					     bdf, offset, value, size);
+}
+
+static const char *link_speed_to_str(unsigned int cls)
+{
+	switch (cls) {
+	case PCI_EXP_LNKSTA_CLS_2_5GB: return "2.5";
+	case PCI_EXP_LNKSTA_CLS_5_0GB: return "5.0";
+	case PCI_EXP_LNKSTA_CLS_8_0GB: return "8.0";
+	default:
+		break;
+	}
+
+	return "??";
+}
+
+static u32 brcm_pcie_mdio_form_pkt(unsigned int port, unsigned int regad,
+				   unsigned int cmd)
+{
+	u32 pkt;
+
+	pkt = (port << MDIO_PORT_SHIFT) & MDIO_PORT_MASK;
+	pkt |= (regad << MDIO_REGAD_SHIFT) & MDIO_REGAD_MASK;
+	pkt |= (cmd << MDIO_CMD_SHIFT) & MDIO_CMD_MASK;
+
+	return pkt;
+}
+
+/**
+ * brcm_pcie_mdio_read() - Perform a register read on the internal MDIO bus
+ * @base: Pointer to the PCIe controller IO registers
+ * @port: The MDIO port number
+ * @regad: The register address
+ * @val: A pointer at which to store the read value
+ *
+ * Return: 0 on success and register value in @val, negative error value
+ *         on failure.
+ */
+static int brcm_pcie_mdio_read(void __iomem *base, unsigned int port,
+			       unsigned int regad, u32 *val)
+{
+	u32 data, addr;
+	int ret;
+
+	addr = brcm_pcie_mdio_form_pkt(port, regad, MDIO_CMD_READ);
+	writel(addr, base + PCIE_RC_DL_MDIO_ADDR);
+	readl(base + PCIE_RC_DL_MDIO_ADDR);
+
+	ret = readl_poll_timeout(base + PCIE_RC_DL_MDIO_RD_DATA, data,
+				 (data & MDIO_DATA_DONE_MASK), 100);
+
+	*val = data & MDIO_DATA_MASK;
+
+	return ret;
+}
+
+/**
+ * brcm_pcie_mdio_write() - Perform a register write on the internal MDIO bus
+ * @base: Pointer to the PCIe controller IO registers
+ * @port: The MDIO port number
+ * @regad: Address of the register
+ * @wrdata: The value to write
+ *
+ * Return: 0 on success, negative error value on failure.
+ */
+static int brcm_pcie_mdio_write(void __iomem *base, unsigned int port,
+				unsigned int regad, u16 wrdata)
+{
+	u32 data, addr;
+
+	addr = brcm_pcie_mdio_form_pkt(port, regad, MDIO_CMD_WRITE);
+	writel(addr, base + PCIE_RC_DL_MDIO_ADDR);
+	readl(base + PCIE_RC_DL_MDIO_ADDR);
+	writel(MDIO_DATA_DONE_MASK | wrdata, base + PCIE_RC_DL_MDIO_WR_DATA);
+
+	return readl_poll_timeout(base + PCIE_RC_DL_MDIO_WR_DATA, data,
+				  !(data & MDIO_DATA_DONE_MASK), 100);
+}
+
+/**
+ * brcm_pcie_set_ssc() - Configure the controller for Spread Spectrum Clocking
+ * @base: pointer to the PCIe controller IO registers
+ *
+ * Return: 0 on success, negative error value on failure.
+ */
+static int brcm_pcie_set_ssc(void __iomem *base)
+{
+	int pll, ssc;
+	int ret;
+	u32 tmp;
+
+	ret = brcm_pcie_mdio_write(base, MDIO_PORT0, SET_ADDR_OFFSET,
+				   SSC_REGS_ADDR);
+	if (ret < 0)
+		return ret;
+
+	ret = brcm_pcie_mdio_read(base, MDIO_PORT0, SSC_CNTL_OFFSET, &tmp);
+	if (ret < 0)
+		return ret;
+
+	tmp |= (SSC_CNTL_OVRD_EN_MASK | SSC_CNTL_OVRD_VAL_MASK);
+
+	ret = brcm_pcie_mdio_write(base, MDIO_PORT0, SSC_CNTL_OFFSET, tmp);
+	if (ret < 0)
+		return ret;
+
+	udelay(1000);
+	ret = brcm_pcie_mdio_read(base, MDIO_PORT0, SSC_STATUS_OFFSET, &tmp);
+	if (ret < 0)
+		return ret;
+
+	ssc = (tmp & SSC_STATUS_SSC_MASK) >> SSC_STATUS_SSC_SHIFT;
+	pll = (tmp & SSC_STATUS_PLL_LOCK_MASK) >> SSC_STATUS_PLL_LOCK_SHIFT;
+
+	return ssc && pll ? 0 : -EIO;
+}
+
+/**
+ * brcm_pcie_set_gen() - Limits operation to a specific generation (1, 2 or 3)
+ * @pcie: pointer to the PCIe controller state
+ * @gen: PCIe generation to limit the controller's operation to
+ */
+static void brcm_pcie_set_gen(struct brcm_pcie *pcie, unsigned int gen)
+{
+	void __iomem *cap_base = pcie->base + BRCM_PCIE_CAP_REGS;
+
+	u16 lnkctl2 = readw(cap_base + PCI_EXP_LNKCTL2);
+	u32 lnkcap = readl(cap_base + PCI_EXP_LNKCAP);
+
+	lnkcap = (lnkcap & ~PCI_EXP_LNKCAP_SLS) | gen;
+	writel(lnkcap, cap_base + PCI_EXP_LNKCAP);
+
+	lnkctl2 = (lnkctl2 & ~0xf) | gen;
+	writew(lnkctl2, cap_base + PCI_EXP_LNKCTL2);
+}
+
+static void brcm_pcie_set_outbound_win(struct brcm_pcie *pcie,
+				       unsigned int win, u64 phys_addr,
+				       u64 pcie_addr, u64 size)
+{
+	void __iomem *base = pcie->base;
+	u32 phys_addr_mb_high, limit_addr_mb_high;
+	phys_addr_t phys_addr_mb, limit_addr_mb;
+	int high_addr_shift;
+	u32 tmp;
+
+	/* Set the base of the pcie_addr window */
+	writel(lower_32_bits(pcie_addr), base + PCIE_MEM_WIN0_LO(win));
+	writel(upper_32_bits(pcie_addr), base + PCIE_MEM_WIN0_HI(win));
+
+	/* Write the addr base & limit lower bits (in MBs) */
+	phys_addr_mb = phys_addr / SZ_1M;
+	limit_addr_mb = (phys_addr + size - 1) / SZ_1M;
+
+	tmp = readl(base + PCIE_MEM_WIN0_BASE_LIMIT(win));
+	u32p_replace_bits(&tmp, phys_addr_mb,
+			  MEM_WIN0_BASE_LIMIT_BASE_MASK);
+	u32p_replace_bits(&tmp, limit_addr_mb,
+			  MEM_WIN0_BASE_LIMIT_LIMIT_MASK);
+	writel(tmp, base + PCIE_MEM_WIN0_BASE_LIMIT(win));
+
+	/* Write the cpu & limit addr upper bits */
+	high_addr_shift = MEM_WIN0_BASE_LIMIT_BASE_HI_SHIFT;
+	phys_addr_mb_high = phys_addr_mb >> high_addr_shift;
+	tmp = readl(base + PCIE_MEM_WIN0_BASE_HI(win));
+	u32p_replace_bits(&tmp, phys_addr_mb_high,
+			  MEM_WIN0_BASE_HI_BASE_MASK);
+	writel(tmp, base + PCIE_MEM_WIN0_BASE_HI(win));
+
+	limit_addr_mb_high = limit_addr_mb >> high_addr_shift;
+	tmp = readl(base + PCIE_MEM_WIN0_LIMIT_HI(win));
+	u32p_replace_bits(&tmp, limit_addr_mb_high,
+			  PCIE_MEM_WIN0_LIMIT_HI_LIMIT_MASK);
+	writel(tmp, base + PCIE_MEM_WIN0_LIMIT_HI(win));
+}
+
+static int brcm_pcie_probe(struct udevice *dev)
+{
+	struct udevice *ctlr = pci_get_controller(dev);
+	struct pci_controller *hose = dev_get_uclass_priv(ctlr);
+	struct brcm_pcie *pcie = dev_get_priv(dev);
+	void __iomem *base = pcie->base;
+	bool ssc_good = false;
+	int num_out_wins = 0;
+	u64 rc_bar2_offset, rc_bar2_size;
+	unsigned int scb_size_val;
+	int i, ret;
+	u16 nlw, cls, lnksta;
+	u32 tmp;
+
+	/*
+	 * Reset the bridge, assert the fundamental reset. Note for some SoCs,
+	 * e.g. BCM7278, the fundamental reset should not be asserted here.
+	 * This will need to be changed when support for other SoCs is added.
+	 */
+	setbits_le32(base + PCIE_RGR1_SW_INIT_1,
+		     RGR1_SW_INIT_1_INIT_MASK | RGR1_SW_INIT_1_PERST_MASK);
+	/*
+	 * The delay is a safety precaution to preclude the reset signal
+	 * from looking like a glitch.
+	 */
+	udelay(100);
+
+	/* Take the bridge out of reset */
+	clrbits_le32(base + PCIE_RGR1_SW_INIT_1, RGR1_SW_INIT_1_INIT_MASK);
+
+	clrbits_le32(base + PCIE_MISC_HARD_PCIE_HARD_DEBUG,
+		     PCIE_HARD_DEBUG_SERDES_IDDQ_MASK);
+
+	/* Wait for SerDes to be stable */
+	udelay(100);
+
+	/* Set SCB_MAX_BURST_SIZE, CFG_READ_UR_MODE, SCB_ACCESS_EN */
+	clrsetbits_le32(base + PCIE_MISC_MISC_CTRL,
+			MISC_CTRL_MAX_BURST_SIZE_MASK,
+			MISC_CTRL_SCB_ACCESS_EN_MASK |
+			MISC_CTRL_CFG_READ_UR_MODE_MASK |
+			MISC_CTRL_MAX_BURST_SIZE_128);
+	/*
+	 * TODO: When support for other SoCs than BCM2711 is added we may
+	 * need to use the base address and size(s) provided in the dma-ranges
+	 * property.
+	 */
+	rc_bar2_offset = 0;
+	rc_bar2_size = 0xc0000000;
+
+	tmp = lower_32_bits(rc_bar2_offset);
+	u32p_replace_bits(&tmp, brcm_pcie_encode_ibar_size(rc_bar2_size),
+			  RC_BAR2_CONFIG_LO_SIZE_MASK);
+	writel(tmp, base + PCIE_MISC_RC_BAR2_CONFIG_LO);
+	writel(upper_32_bits(rc_bar2_offset),
+	       base + PCIE_MISC_RC_BAR2_CONFIG_HI);
+
+	scb_size_val = rc_bar2_size ?
+		       ilog2(rc_bar2_size) - 15 : 0xf; /* 0xf is 1GB */
+
+	tmp = readl(base + PCIE_MISC_MISC_CTRL);
+	u32p_replace_bits(&tmp, scb_size_val,
+			  MISC_CTRL_SCB0_SIZE_MASK);
+	writel(tmp, base + PCIE_MISC_MISC_CTRL);
+
+	/* Disable the PCIe->GISB memory window (RC_BAR1) */
+	clrbits_le32(base + PCIE_MISC_RC_BAR1_CONFIG_LO,
+		     RC_BAR1_CONFIG_LO_SIZE_MASK);
+
+	/* Disable the PCIe->SCB memory window (RC_BAR3) */
+	clrbits_le32(base + PCIE_MISC_RC_BAR3_CONFIG_LO,
+		     RC_BAR3_CONFIG_LO_SIZE_MASK);
+
+	/* Mask all interrupts since we are not handling any yet */
+	writel(0xffffffff, base + PCIE_MSI_INTR2_MASK_SET);
+
+	/* Clear any interrupts we find on boot */
+	writel(0xffffffff, base + PCIE_MSI_INTR2_CLR);
+
+	if (pcie->gen)
+		brcm_pcie_set_gen(pcie, pcie->gen);
+
+	/* Unassert the fundamental reset */
+	clrbits_le32(pcie->base + PCIE_RGR1_SW_INIT_1,
+		     RGR1_SW_INIT_1_PERST_MASK);
+
+	/* Give the RC/EP time to wake up, before trying to configure RC.
+	 * Intermittently check status for link-up, up to a total of 100ms.
+	 */
+	for (i = 0; i < 100 && !brcm_pcie_link_up(pcie); i += 5)
+		mdelay(5);
+
+	if (!brcm_pcie_link_up(pcie)) {
+		printf("PCIe BRCM: link down\n");
+		return -EINVAL;
+	}
+
+	if (!brcm_pcie_rc_mode(pcie)) {
+		printf("PCIe misconfigured; is in EP mode\n");
+		return -EINVAL;
+	}
+
+	for (i = 0; i < hose->region_count; i++) {
+		struct pci_region *reg = &hose->regions[i];
+
+		if (reg->flags != PCI_REGION_MEM)
+			continue;
+
+		if (num_out_wins >= BRCM_NUM_PCIE_OUT_WINS)
+			return -EINVAL;
+
+		brcm_pcie_set_outbound_win(pcie, num_out_wins, reg->phys_start,
+					   reg->bus_start, reg->size);
+
+		num_out_wins++;
+	}
+
+	/*
+	 * For config space accesses on the RC, show the right class for
+	 * a PCIe-PCIe bridge (the default setting is to be EP mode).
+	 */
+	clrsetbits_le32(base + PCIE_RC_CFG_PRIV1_ID_VAL3,
+			CFG_PRIV1_ID_VAL3_CLASS_CODE_MASK, 0x060400);
+
+	if (pcie->ssc) {
+		ret = brcm_pcie_set_ssc(pcie->base);
+		if (!ret)
+			ssc_good = true;
+		else
+			printf("PCIe BRCM: failed attempt to enter SSC mode\n");
+	}
+
+	lnksta = readw(base + BRCM_PCIE_CAP_REGS + PCI_EXP_LNKSTA);
+	cls = lnksta & PCI_EXP_LNKSTA_CLS;
+	nlw = (lnksta & PCI_EXP_LNKSTA_NLW) >> PCI_EXP_LNKSTA_NLW_SHIFT;
+
+	printf("PCIe BRCM: link up, %s Gbps x%u %s\n", link_speed_to_str(cls),
+	       nlw, ssc_good ? "(SSC)" : "(!SSC)");
+
+	/* PCIe->SCB endian mode for BAR */
+	clrsetbits_le32(base + PCIE_RC_CFG_VENDOR_SPECIFIC_REG1,
+			VENDOR_SPECIFIC_REG1_ENDIAN_MODE_BAR2_MASK,
+			VENDOR_SPECIFIC_REG1_LITTLE_ENDIAN);
+	/*
+	 * Refclk from RC should be gated with CLKREQ# input when ASPM L0s,L1
+	 * is enabled => setting the CLKREQ_DEBUG_ENABLE field to 1.
+	 */
+	setbits_le32(base + PCIE_MISC_HARD_PCIE_HARD_DEBUG,
+		     PCIE_HARD_DEBUG_CLKREQ_DEBUG_ENABLE_MASK);
+
+	return 0;
+}
+
+static int brcm_pcie_ofdata_to_platdata(struct udevice *dev)
+{
+	struct brcm_pcie *pcie = dev_get_priv(dev);
+	ofnode dn = dev_ofnode(dev);
+	u32 max_link_speed;
+	int ret;
+
+	/* Get the controller base address */
+	pcie->base = dev_read_addr_ptr(dev);
+	if (!pcie->base)
+		return -EINVAL;
+
+	pcie->ssc = ofnode_read_bool(dn, "brcm,enable-ssc");
+
+	ret = ofnode_read_u32(dn, "max-link-speed", &max_link_speed);
+	if (ret < 0 || max_link_speed > 4)
+		pcie->gen = 0;
+	else
+		pcie->gen = max_link_speed;
+
+	return 0;
+}
+
+static const struct dm_pci_ops brcm_pcie_ops = {
+	.read_config	= brcm_pcie_read_config,
+	.write_config	= brcm_pcie_write_config,
+};
+
+static const struct udevice_id brcm_pcie_ids[] = {
+	{ .compatible = "brcm,bcm2711-pcie" },
+	{ }
+};
+
+U_BOOT_DRIVER(pcie_brcm_base) = {
+	.name			= "pcie_brcm",
+	.id			= UCLASS_PCI,
+	.ops			= &brcm_pcie_ops,
+	.of_match		= brcm_pcie_ids,
+	.probe			= brcm_pcie_probe,
+	.ofdata_to_platdata	= brcm_pcie_ofdata_to_platdata,
+	.priv_auto_alloc_size	= sizeof(struct brcm_pcie),
+};

From patchwork Mon May 25 11:39:59 2020
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sylwester Nawrocki <s.nawrocki@samsung.com>
X-Patchwork-Id: 1297308
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=pass (sender SPF authorized) smtp.mailfrom=lists.denx.de
 (client-ip=2a01:238:438b:c500:173d:9f52:ddab:ee01; helo=phobos.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de; receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.a=rsa-sha256
 header.s=mail20170921 header.b=dKv/8HGD;
 dkim-atps=neutral
Received: from phobos.denx.de (phobos.denx.de
 [IPv6:2a01:238:438b:c500:173d:9f52:ddab:ee01])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits))
 (No client certificate requested)
 by ozlabs.org (Postfix) with ESMTPS id 49VwD24Hx3z9sSg
 for <incoming@patchwork.ozlabs.org>; Mon, 25 May 2020 21:41:38 +1000 (AEST)
Received: from h2850616.stratoserver.net (localhost [IPv6:::1])
 by phobos.denx.de (Postfix) with ESMTP id 02B7D81CA0;
 Mon, 25 May 2020 13:40:53 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=u-boot-bounces@lists.denx.de
Authentication-Results: phobos.denx.de; dkim=pass (1024-bit key;
 unprotected) header.d=samsung.com header.i=@samsung.com header.b="dKv/8HGD";
 dkim-atps=neutral
Received: by phobos.denx.de (Postfix, from userid 109)
 id 12B3A813C6; Mon, 25 May 2020 13:40:31 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on phobos.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
 DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_PASS,UPPERCASE_50_75,URIBL_BLOCKED
 autolearn=no autolearn_force=no version=3.4.2
Received: from mailout1.w1.samsung.com (mailout1.w1.samsung.com
 [210.118.77.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by phobos.denx.de (Postfix) with ESMTPS id 67EEE81C72
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 13:40:22 +0200 (CEST)
Authentication-Results: phobos.denx.de;
 dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: phobos.denx.de;
 spf=pass smtp.mailfrom=s.nawrocki@samsung.com
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
 by mailout1.w1.samsung.com (KnoxPortal) with ESMTP id
 20200525114022euoutp0173682a8a602ef72d583b5eb085c0de3d~SQpQM4LsH1593015930euoutp01z
 for <u-boot@lists.denx.de>; Mon, 25 May 2020 11:40:22 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w1.samsung.com
 20200525114022euoutp0173682a8a602ef72d583b5eb085c0de3d~SQpQM4LsH1593015930euoutp01z
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
 s=mail20170921; t=1590406822;
 bh=y7o+7JkzK21hfBvtUcAphx8ppQbUxA+9W3gcpAxcXCs=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=dKv/8HGDHP1Dgkt57+bwDbfHXBX1SE4aswbiH31+S937QKWA5CqL4oxIiX5cJXYzy
 kdLDdk20rvVMxE1vXFHMNtHd4Ncjsd+NVjBHyN+1J655ntMELn1ET0EmFXPDZJMsMb
 qoQ8OSAaOTpNeLwcEIBfYsYINKmYk1Les89CgU0Y=
Received: from eusmges3new.samsung.com (unknown [203.254.199.245]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTP id
 20200525114021eucas1p191b9a7db4f997e9a0e682502b0e407a2~SQpP-uxFf1611916119eucas1p1w;
 Mon, 25 May 2020 11:40:21 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206]) by
 eusmges3new.samsung.com (EUCPMTA) with SMTP id DB.C8.60698.5AEABCE5; Mon, 25
 May 2020 12:40:21 +0100 (BST)
Received: from eusmtrp2.samsung.com (unknown [182.198.249.139]) by
 eucas1p1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114021eucas1p1c6f97a5b78b63f1cb7aac9f892cd9d24~SQpPlqcW11619216192eucas1p1V;
 Mon, 25 May 2020 11:40:21 +0000 (GMT)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180]) by
 eusmtrp2.samsung.com (KnoxPortal) with ESMTP id
 20200525114021eusmtrp25eda0a8b70cded4256fe1e1b03ecc039~SQpPlDk4C2713827138eusmtrp2a;
 Mon, 25 May 2020 11:40:21 +0000 (GMT)
X-AuditID: cbfec7f5-a29ff7000001ed1a-03-5ecbaea52475
Received: from eusmtip1.samsung.com ( [203.254.199.221]) by
 eusmgms2.samsung.com (EUCPMTA) with SMTP id FE.47.07950.5AEABCE5; Mon, 25
 May 2020 12:40:21 +0100 (BST)
Received: from AMDC3061.digital.local (unknown [106.120.51.75]) by
 eusmtip1.samsung.com (KnoxPortal) with ESMTPA id
 20200525114020eusmtip19d618ffa3d429619926173b5e93b51bf~SQpPCuwNL2309623096eusmtip1u;
 Mon, 25 May 2020 11:40:20 +0000 (GMT)
From: Sylwester Nawrocki <s.nawrocki@samsung.com>
To: u-boot@lists.denx.de, mbrugger@suse.com
Cc: marex@denx.de, bmeng.cn@gmail.com, james.quinlan@broadcom.com,
 sjg@chromium.org, nsaenzjulienne@suse.de, jh80.chung@samsung.com,
 m.szyprowski@samsung.com, b.zolnierkie@samsung.com, Sylwester Nawrocki
 <s.nawrocki@samsung.com>
Subject: [PATCH v4 9/9] configs: Enable support for the XHCI controller on
 RPI4 board (ARM 64-bit)
Date: Mon, 25 May 2020 13:39:59 +0200
Message-Id: <20200525113959.11886-10-s.nawrocki@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20200525113959.11886-1-s.nawrocki@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprLKsWRmVeSWpSXmKPExsWy7djPc7pL152OM5g5X89i44z1rBZTe+It
 9r7pZ7O48auN1WLtkbvsFm/aGhktFkx+wmqxbdZyNovDb9pZLb5t2cZo8XZvJ7sDt8es+2fZ
 PGY3XGTxmDfrBIvHzll32T3O3tnB6NG3ZRWjx/otV1k8Np+uDuCI4rJJSc3JLEst0rdL4MpY
 9q+HueCCRMXKxfNYGxh7RLsYOTkkBEwkJq+7xNzFyMUhJLCCUeLb+cvsEM4XRolT316xQTif
 GSWWrPzJCtOy4chvJojEckaJZY+WM8G1bO65zwZSxSZgKNF7tI8RxBYR0Ja4uWYbWBGzwCtG
 iWcf9gKN4uAQFkiRaPlVAVLDIqAqcaJjAhOIzStgI3HwwzQ2iG3yEqs3HGAGsTmB4qcO3mOG
 iC9jl1jaKAhhu0i827CIBcIWlnh1fAs7hC0j8X/nfLC9EgLNjBI9u2+zQzgTGCXuH1/ACFFl
 LXHn3C82kIOYBTQl1u/Shwg7Sny88BzsTgkBPokbb8F2MQOZk7ZNZ4YI80p0tAlBVKtI/F41
 nQnClpLofvIf6hwPiR0N3WCvCAn0M0r8OpoygVF+FsKuBYyMqxjFU0uLc9NTi43zUsv1ihNz
 i0vz0vWS83M3MQITzel/x7/uYNz3J+kQowAHoxIPr8Wa03FCrIllxZW5hxglOJiVRHjb3IFC
 vCmJlVWpRfnxRaU5qcWHGKU5WJTEeY0XvYwVEkhPLEnNTk0tSC2CyTJxcEo1MDKXMP3m9HJ9
 0NKS4i1pz2+rquNUHJMW+eXc4odnhWx1XQ63Ln/2o5A96jJvdfvM33dUtmVZvBJ7tdT9WrPx
 b94V3Sv/f6jklP/ueUrk04SOxc5zPOd2+QaxcnA5d7PqmSf9nRoyU010qk+x34G1S8+0z2+P
 Sns9/S/Qa4Fml9eZ+jRFyZ9UYinOSDTUYi4qTgQAPj72nDADAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrHLMWRmVeSWpSXmKPExsVy+t/xu7pL152OM+h6KmixccZ6VoupPfEW
 e9/0s1nc+NXGarH2yF12izdtjYwWCyY/YbXYNms5m8XhN+2sFt+2bGO0eLu3k92B22PW/bNs
 HrMbLrJ4zJt1gsVj56y77B5n7+xg9OjbsorRY/2Wqywem09XB3BE6dkU5ZeWpCpk5BeX2CpF
 G1oY6RlaWugZmVjqGRqbx1oZmSrp29mkpOZklqUW6dsl6GUs+9fDXHBBomLl4nmsDYw9ol2M
 nBwSAiYSG478Zupi5OIQEljKKNFxqoWti5EDKCElMb9FCaJGWOLPtS42iJpPjBKLVzczgiTY
 BAwleo/2gdkiAroSjT3rWECKmAW+MEpsOrAYbJCwQJJER0cxSA2LgKrEiY4JTCA2r4CNxMEP
 09ggFshLrN5wgBnE5gSKnzp4D8wWErCWmDnrGeMERr4FjAyrGEVSS4tz03OLjfSKE3OLS/PS
 9ZLzczcxAsN+27GfW3Ywdr0LPsQowMGoxMNrseZ0nBBrYllxZe4hRgkOZiUR3jZ3oBBvSmJl
 VWpRfnxRaU5q8SFGU6CjJjJLiSbnA2MyryTe0NTQ3MLS0NzY3NjMQkmct0PgYIyQQHpiSWp2
 ampBahFMHxMHp1QDo3d14D6xuLUbFbrjuiLE1Hzepb098rxh44ytH6w6n67/L3H3d35XxVMB
 7ZCsxyXHy61fRN27Pu1N9dP+fSVKvI01U7K2MG58OuGB8bZvPS8K15Sq/HqqGrOEf8Pd0uuq
 BRO+Wwp/ZP79rd9xHzOvwLQ3CZk/nr6zu3Kp3zdua/+UtQd0z1ar2CuxFGckGmoxFxUnAgBO
 ZeiFkQIAAA==
X-CMS-MailID: 20200525114021eucas1p1c6f97a5b78b63f1cb7aac9f892cd9d24
X-Msg-Generator: CA
X-RootMTR: 20200525114021eucas1p1c6f97a5b78b63f1cb7aac9f892cd9d24
X-EPHeader: CA
CMS-TYPE: 201P
X-CMS-RootMailID: 20200525114021eucas1p1c6f97a5b78b63f1cb7aac9f892cd9d24
References: <20200525113959.11886-1-s.nawrocki@samsung.com>
 <CGME20200525114021eucas1p1c6f97a5b78b63f1cb7aac9f892cd9d24@eucas1p1.samsung.com>
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.30rc1
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <https://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>
X-Virus-Scanned: clamav-milter 0.102.2 at phobos.denx.de
X-Virus-Status: Clean

From: Marek Szyprowski <m.szyprowski@samsung.com>

This requires enabling BRCMSTB PCIe and XHCI_PCI drivers as well as PCI
and USB commands. To get it working one has to call the following commands:
"pci enum; usb start;", thus such commands have been added to the default
"preboot" environment variable. One has to update their environment if it
is already configured to get this feature working out of the box.

Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
---
Changes since v3:
 - added missing rpi_4_defconfig changes
Changes since v2:
 - rpi_4_32b_defconfig, rpi_4_defconfig changes moved to separate
   patch
Changes since v1:
 - removed unneeded CONFIG_XHCI_64BIT_DWORD_ACCESS_ONLY entry.
Changes since RFC:
 - none.
---
 configs/rpi_4_defconfig     | 9 +++++++++
 configs/rpi_arm64_defconfig | 8 +++++++-
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/configs/rpi_4_defconfig b/configs/rpi_4_defconfig
index 6d148da..3f1a1b5 100644
--- a/configs/rpi_4_defconfig
+++ b/configs/rpi_4_defconfig
@@ -6,5 +6,7 @@ CONFIG_ENV_SIZE=0x4000
 CONFIG_DISTRO_DEFAULTS=y
 CONFIG_OF_BOARD_SETUP=y
+CONFIG_USE_PREBOOT=y
+CONFIG_PREBOOT="pci enum; usb start;"
 CONFIG_MISC_INIT_R=y
 # CONFIG_DISPLAY_CPUINFO is not set
 # CONFIG_DISPLAY_BOARDINFO is not set
@@ -12,6 +12,8 @@ CONFIG_SYS_PROMPT="U-Boot> "
 CONFIG_CMD_DFU=y
 CONFIG_CMD_GPIO=y
 CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_USB=y
 CONFIG_CMD_FS_UUID=y
 CONFIG_OF_BOARD=y
 CONFIG_ENV_FAT_DEVICE_AND_PART="0:1"
@@ -28,12 +32,17 @@ CONFIG_MMC_SDHCI=y
 CONFIG_MMC_SDHCI_BCM2835=y
 CONFIG_DM_ETH=y
 CONFIG_BCMGENET=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_PCI_BRCMSTB=y
 CONFIG_PINCTRL=y
 # CONFIG_PINCTRL_GENERIC is not set
 # CONFIG_REQUIRE_SERIAL_CONSOLE is not set
 CONFIG_USB=y
 CONFIG_DM_USB=y
 CONFIG_DM_USB_GADGET=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_XHCI_PCI=y
 CONFIG_USB_GADGET=y
 CONFIG_USB_GADGET_MANUFACTURER="FSL"
 CONFIG_USB_GADGET_VENDOR_NUM=0x0525
diff --git a/configs/rpi_arm64_defconfig b/configs/rpi_arm64_defconfig
index fea86be..f12d1e3 100644
--- a/configs/rpi_arm64_defconfig
+++ b/configs/rpi_arm64_defconfig
@@ -7,13 +7,14 @@ CONFIG_NR_DRAM_BANKS=2
 CONFIG_DISTRO_DEFAULTS=y
 CONFIG_OF_BOARD_SETUP=y
 CONFIG_USE_PREBOOT=y
-CONFIG_PREBOOT="usb start"
+CONFIG_PREBOOT="pci enum; usb start;"
 CONFIG_MISC_INIT_R=y
 # CONFIG_DISPLAY_CPUINFO is not set
 # CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_SYS_PROMPT="U-Boot> "
 CONFIG_CMD_GPIO=y
 CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
 CONFIG_CMD_USB=y
 CONFIG_CMD_FS_UUID=y
 CONFIG_OF_BOARD=y
@@ -26,11 +27,16 @@ CONFIG_MMC_SDHCI=y
 CONFIG_MMC_SDHCI_BCM2835=y
 CONFIG_DM_ETH=y
 CONFIG_BCMGENET=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_PCI_BRCMSTB=y
 CONFIG_PINCTRL=y
 # CONFIG_PINCTRL_GENERIC is not set
 # CONFIG_REQUIRE_SERIAL_CONSOLE is not set
 CONFIG_USB=y
 CONFIG_DM_USB=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_XHCI_PCI=y
 CONFIG_USB_DWC2=y
 CONFIG_USB_KEYBOARD=y
 CONFIG_USB_HOST_ETHER=y
