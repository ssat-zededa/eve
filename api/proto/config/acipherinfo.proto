// Copyright(c) 2017-2018 Zededa, Inc.
// All rights reserved.

syntax = "proto3";

import "evecommon/evecommon.proto";

package org.lfedge.eve.config;
option go_package  = "github.com/lf-edge/eve/api/go/config";
option java_package = "org.lfedge.eve.config";

// Cipher information for sensitive data.

// Security Key Exchange Method
enum KeyExchangeScheme {
  KEA_NONE = 0;
  KEA_ECDH = 1;
}

// Encryption Scheme for Cipher Payload
enum EncryptionScheme {
  SA_NONE = 0;
  SA_AES_256_CFB = 1;
}

// Cipher information to decrypt Sensitive Data
message CipherContext {
  // cipher context id, key to this structure
  string contextId = 1;

  // algorithm used to compute hash for certificates
  org.lfedge.eve.common.HashAlgorithm hashScheme = 2;

  // for key exchange scheme, like ECDH etc.
  KeyExchangeScheme keyExchangeScheme = 3;

  // for encrypting sensitive data, like AES256 etc.
  EncryptionScheme encryptionScheme = 4;

  // device public certificate hash
  bytes deviceCertHash = 5;

  // controller certificate hash
  bytes controllerCertHash = 6;
}

// Encrypted sensitive data information
message CipherBlock {
  // cipher context id
  string cipherContextId = 1;

  // Initial Value for Symmetric Key derivation
  bytes initialValue = 2;

  // encrypted sensitive data
  bytes cipherData = 3;

  // sha256 of the plaintext sensitive data
  bytes clearTextSha256 = 4;
}


// This message will be filled with the
// details to be encrypted and shared across
// wire for data in transit, by the controller
// for encryption
message EncryptionBlock {
  string dsAPIKey = 1;
  string dsPassword = 2;
  string wifiUserName = 3;      // If the authentication type is EAP
  string wifiPassword = 4;
  string protectedUserData = 5;
}
