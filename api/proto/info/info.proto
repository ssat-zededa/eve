// Copyright(c) 2017-2020 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "evecommon/devmodelcommon.proto";

option go_package  = "github.com/lf-edge/eve/api/go/info";

option java_package = "org.lfedge.eve.info";


// Remove Me
enum DepMetricItemType {
  DepMetricItemOther = 0;          // E.g., a string like an ESSID
  DepMetricItemGauge = 1;          // Goes up and down over time
  DepMetricItemCounter = 2;        // Monotonically increasing (until reboot)
  DepMetricItemState = 3;          // Toggles on and off; count transitions
}

// Open-ended metrics from different part of the device such as LTE modem
// metrics.
message deprecatedMetricItem {
  string key = 1;         // E.g., "lte-signal-strength"
  DepMetricItemType type = 2;
  oneof metricItemValue {
    bool boolValue = 3;
    uint32 uint32Value = 4; // If timer this is in seconds
    uint64 uint64Value = 5;
    float floatValue = 6;
    string stringValue = 7; // Use with care
  }
}

// Map from MAC to IP addresses
message ZmetIPAssignmentEntry {
  string macAddress = 1;
  repeated string ipAddress = 2;
}

// Map from vifname to other info
message ZmetVifInfo {
  string vifName = 1;
  string macAddress = 2;
  string appID = 3; // UUID
}

/*
 * Broadly there are two types
 * Info : information that is discovered/rarely changes
 * Metrics: information that gets updated periodically
 * Protobuf definitions in this file follow the convention.
 */
enum ZInfoTypes {
  ZiNop = 0;
  ZiDevice = 1;
  // deprecated = 2;
  ZiApp = 3;
  // deprecated = 4;
  // deprecated = 5;
  ZiNetworkInstance = 6;
  ZiVolume = 7;
  ZiContentTree = 8;
  ZiBlobList = 9;
}

// Information about assignable I/O adapter bundles
message ZioBundle {
  org.lfedge.eve.common.PhyIoType type = 1;
  string name = 2;              // Short hand name such as "com"
  repeated string members = 3;  // E.g., "com1", "com2"
  string usedByAppUUID = 4;
  bool usedByBaseOS = 5;
  repeated IoAddresses ioAddressList = 6; // One per member
  org.lfedge.eve.common.PhyIoMemberUsage usage = 7; // Usage of the IoBundle
  ErrorInfo err = 8; // Any errors on the IoBundle
}

message IoAddresses {
  string macAddress = 1;
}

// Manufacturing info, product name, model, version etc.
// From dmidecode/BIOS on Intel
message ZInfoManufacturer {
  string manufacturer = 1;
  string productName = 2;
  string version = 3;
  string serialNumber = 4;
  string UUID = 5;             // From BIOS; different than device UUID
  string compatible = 6;       // From /proc/device-tree/compatible on ARM
  string biosVendor = 7;
  string biosVersion = 8;
  string biosReleaseDate = 9;
}

message ZInfoNetwork {
  // deprecated = 1;
  // deprecated = 2;
  string macAddr = 3;

  // devName - Must be set to SystemAdapter.Name which is the Logicallabel
  string devName = 4;
  // alias - Must be set to SystemAdapter.alias
  string alias = 40;


  repeated string IPAddrs = 5; // All IP addresses with /N for subnet
  repeated string defaultRouters = 6; // If DHCP assigned
  ZInfoDNS dns = 7; // If DHCP assigned
  bool up = 8;      // operational up/down status.
  GeoLoc location = 9;
  bool uplink = 10; // Uplink interface  // XXX rename to isMgmt
  ErrorInfo networkErr = 11; // For instance bad proxy config

  // Ifname from PhysicalIo - eth0, eth1 etc
  string localName = 12;

  ProxyStatus proxy = 13;
}

// From an IP address-based geolocation service
// XXX later define GPS coordinates from device
message GeoLoc {
  string UnderlayIP = 1;
  string Hostname = 2;
  string City = 3;
  string Region = 4;
  string Country = 5;
  string Loc = 6;
  string Org = 7;
  string Postal = 8;
}

// This is used both to represent the information we receive from DHCP
// for each interface, and the information the device is using
// (from /etc/resolv.conf). The latter could be different than what's received
// from DHCP on all the interfaces
message ZInfoDNS {
  repeated string DNSservers = 1;
  string DNSdomain = 2;
  repeated string DNSsearch = 3;
}

// Enum names from OMA-TS-LWM2M_SwMgmt-V1_0-20151201-C
// plus additions starting at BOOTING
enum ZSwState {
  INVALID               = 0;
  INITIAL               = 1;    // Config received
  DOWNLOAD_STARTED      = 2;    // Download in-progress
  DOWNLOADED            = 3;    // Download completed, verification in-progress
  DELIVERED             = 4;    // Verification completed
  INSTALLED             = 5;    // Installed, ready for activation
  BOOTING               = 6;    // booting. Booting and above means that App is activated.
  RUNNING               = 7;    // running
  HALTING               = 8;    // being halted
  HALTED                = 9;    // Halted
  RESTARTING            = 10;   // Restarting due to restart command
  PURGING               = 11;   // Purging due to purge command
  // Prior to DOWNLOAD_STARTED we go through these:
  RESOLVING_TAG         = 12;   // Resolving an image tag
  RESOLVED_TAG          = 13;   // Tag has been resolved/failed
  // Prior to INSTALLED we go through these:
  CREATING_VOLUME       = 14;   // Volume create in progress
  CREATED_VOLUME        = 15;   // Volume create done/failed
}

// SW Info for Apps
// XXX to be deprecated once we've completely moved to volumes
message ZInfoSW {
  string swVersion = 2;
  string swHash = 3;
  ZSwState state = 4;           // State of Software Image download/install
  string target = 6;            // E.g., "disk", "kernel", "device-tree"
  string vdev = 7;              // E.g., "xvda"
  uint32 downloadProgress = 8;  // Download progress; 0-100 percent
  string imageName = 9;         // Name of the disk image
}

// Errors in response to the application of configuration
message ErrorInfo {
  string description = 1;
  google.protobuf.Timestamp timestamp = 2;
}

enum HwSecurityModuleStatus {
  UNKNOWN  = 0;  //HSM Status is not known
  NOTFOUND = 1;  //No HSM found
  DISABLED = 2;  //HSM found, but not being used
  ENABLED  = 3;  //HSM is found and being actively used
}

enum DataSecAtRestStatus {
  DATASEC_AT_REST_UNKNOWN  = 0; // Status is unknown
  DATASEC_AT_REST_DISABLED = 1; // Enabled, but not being used
  DATASEC_AT_REST_ENABLED = 2;  // Enabled, and used
  DATASEC_AT_REST_ERROR = 4;    // Enabled, but encountered an error
}

message VaultInfo {
  string name = 1;                //Name of the vault
  DataSecAtRestStatus status = 2; //Status of the vault
  ErrorInfo vaultErr = 3;         //Additional info in case of failure
}

message DataSecAtRest {
  DataSecAtRestStatus status = 1;   // Deprecated
  string info = 2;                  // Deprecated
  repeated VaultInfo vaultList = 3; // per-Vault Info
}

message ZInfoConfigItem {
  string value = 1;
  string error = 2;
}

message ZInfoConfigItemStatus {
  map<string, ZInfoConfigItem> configItems = 1;
  map<string, ZInfoConfigItem> unknownConfigItems = 2;
}

// ZInfoAppInstance - send a summary of App Instance so that controller knows
// how many App Instances are still present on the device. Controller
// can then use it to wait for an app to be fully deleted etc.
message ZInfoAppInstance {
  string uuid = 1;
  string name = 2;
  string domainName = 3;
}

// Base device info, as discovered by Xen (or OS on bare metal)
message ZInfoDevice {
  string machineArch = 4;
  string cpuArch = 5;
  string platform = 6;
  uint32 ncpu = 7;
  uint64 memory = 8;   // in Mbytes
  uint64 storage = 9;  // in MBytes for the currently active image filesystem

  ZInfoManufacturer minfo = 11;

  // OBSOLETE. The information will be provided by DevicePort instead.
  // Newer versions will not fill in this information. Controller Needs
  // to check check if this is empty - if yes, use the DevicePortStatus instead.
  repeated ZInfoNetwork network = 13;

  repeated ZioBundle assignableAdapters = 15;
  ZInfoDNS dns = 16; // What is used in resolv.conf
  repeated ZInfoStorage storageList = 17;

  google.protobuf.Timestamp bootTime = 18;

  repeated ZInfoDevSW swList = 19;
  string   HostName = 20;

  repeated deprecatedMetricItem metricItems = 21; // For instance, static LTE network info

  string   lastRebootReason = 22;
  google.protobuf.Timestamp lastRebootTime = 23;

  SystemAdapterInfo systemAdapter = 24;
  uint32 restartCounter = 25; // Number of times zedagent has restarted i.e., device reboot
  HwSecurityModuleStatus HSMStatus = 26; //State of hardware security modules, like TPM
  string HSMInfo = 27; //Information about HSM like TPM vendor, TEE type etc.
  string lastRebootStack = 28;
  DataSecAtRest dataSecAtRestInfo = 29; //Info about Data At Rest Security

  ZInfoConfigItemStatus configItemStatus = 31;
  repeated ZInfoAppInstance appInstances = 32;
  // rebootConfigCounter - reboot command counter from config last processed by
  // eve
  uint32 rebootConfigCounter = 33;
}

// The current and fallback system adapter information
message SystemAdapterInfo {
  uint32 currentIndex = 1; // Zero means the first/highest priority is used
  repeated DevicePortStatus status = 2;
}

message DevicePortStatus {
  uint32 version = 1;
  string key = 2;
  google.protobuf.Timestamp timePriority = 3;
  google.protobuf.Timestamp lastFailed = 4;
  google.protobuf.Timestamp lastSucceeded = 5;
  repeated DevicePort ports = 6;
  string lastError = 7;
}

message DevicePort {
  string ifname = 1;
  string name = 2;   // Logical name set by controller; same as logicallabel
  bool isMgmt = 3;
  bool free = 4;
  // DhcpConfig
  uint32 dhcpType = 11;
  string subnet = 12;
  // gateway - OBSOLETE - obsoleted by defaultRouters
  string gateway = 13;
  // domainname - OBSOLETE - obsoleted by dns
  string domainname = 14;
  string ntpServer = 15;
  // dnsServers - OBSOLETE - obsoleted by dns
  repeated string dnsServers = 16;
  string dhcpRangeLow = 17;
  string dhcpRangeHigh = 18;

  ProxyStatus proxy = 21;
  string macAddr = 22;
  repeated string IPAddrs = 23; // All IP addresses with /N for subnet
  repeated string defaultRouters = 24; // If DHCP assigned
  ZInfoDNS dns = 25; // If DHCP assigned
  bool up = 26;      // operational up/down status.
  GeoLoc location = 27;
  ErrorInfo err = 29; // Any errors on the interface.
  org.lfedge.eve.common.PhyIoMemberUsage usage = 30; // Usage of the Device port
  string networkUUID = 31; // Network UUID configured for the port.
}

message ProxyStatus {
  repeated ProxyEntry proxies = 1;
  string exceptions = 2;
  string pacfile = 3;
  bool networkProxyEnable = 4;
  string networkProxyURL = 5;
  string wpadURL = 6;
  // XXX add? In config
  // repeated bytes proxyCertPEM = 7;
}

message ProxyEntry {
  uint32 type = 1; // From NPT_ types aka proxyProto
  string server = 2;
  uint32 port = 3;
}

// SW Info for the device base OS
// Many of these fields are for debug purposes. The ones intended
// for the UI/cli are userStatus, subStatus*, shortVersion, and swErr
message ZInfoDevSW {
  bool activated = 2;
  string partitionLabel = 3; // E.g., "IMGA"
  string partitionDevice = 4;// /dev/something
  string partitionState = 5; // state obtained from cboot
  ZSwState status = 6;       // E.g., "DOWNLOADED"
  string shortVersion = 7;   // From rootfs i.e., image
  string longVersion = 8;    // E.g., the yml file content from build
  ErrorInfo swErr = 9;
  uint32 downloadProgress = 10; // Download progress; 0-100 percent
  BaseOsStatus userStatus = 11;
  string subStatusStr = 12;     // English formatted string
  BaseOsSubStatus subStatus = 13;
  uint32 subStatusProgress = 14; // Context-dependent; percentage or time
}

enum BaseOsStatus {
  NONE          = 0;    // Should be ignored in output
  DOWNLOADING   = 1;    // subStatus will have more details
  DOWNLOAD_DONE = 2;    // Terminal state if user action was to download
  UPDATING      = 3;    // subStatus will have more details including
                        // whether it is rebooting, or testing
  UPDATED       = 4;    // Running the configured baseimage
  FALLBACK      = 5;    // Fallback image during testing
  FAILED        = 6;    // See ErrInfo for details
}

enum BaseOsSubStatus {
  NONE_SUBSTATUS      = 0;
  DOWNLOAD_INPROGRESS = 1;      // subStatusProgress is percentage
  VERIFY_INPROGRESS   = 2;      // subStatusProgress is percentage
  UPDATE_INITIALIZING = 3;
  UPDATE_REBOOTING    = 4;      // subStatusProgress is time left
  UPDATE_TESTING      = 5;      // subStatusProgress is time left
  UPDATE_NEED_TEST_CONFIRM = 6; // waiting for controller to commit to new
}

// Per filesystem/partition information
message ZInfoStorage {
  string device = 1;        // E.g., "sda3"
  string mountPath = 2;     // E.g., "/", or "/config"
  uint64 total = 3;         // in MBytes
  bool storageLocation = 4; // Storage location for app disks, images etc.
}

message ZInfoApp {
  string AppID = 1;
  string appVersion = 2;

  bool systemApp = 6;
  string AppName = 7;
  repeated ZInfoSW softwareList = 8; // XXX to be deprecated in favor of volumeRefs
  // deprecated = 9;
  // deprecated = 11;

  google.protobuf.Timestamp bootTime = 12;
  repeated ZioBundle assignedAdapters = 13;
  repeated ErrorInfo appErr = 14;
  ZSwState state = 15;
  repeated ZInfoNetwork network = 16;       // up/down; allocated IP
  repeated string volumeRefs = 17;          // volume UUIDs
}

// ipSec state information
enum ZInfoVpnState {
  VPN_INVALID     = 0;
  VPN_INITIAL     = 1;  // Config received
  VPN_CONNECTING  = 2;  // Connection is in-progress
  VPN_ESTABLISHED = 3;  // Connection established
  VPN_INSTALLED   = 4;  // SAs/Routes Installed
  VPN_REKEYED     = 5;  // SAs Rekeyed
  VPN_DELETED     = 10; // Connection deleted
}

// tunnel link details
message ZInfoVpnLinkInfo {
  string spiId = 1;   // Security Parameter Index
  string subNet = 2;  // Associate Subnet
  bool direction = 3; // 0 = local, 1 = remote
}

// Esp details
message ZInfoVpnLink {
  string id = 1;       // esp id
  string name = 2;     // connection name
  string reqId = 3;    // request id
  uint64 instTime = 4; // in seconds
  string espInfo = 5;  // esp info
  ZInfoVpnState state = 6; // esp state
  ZInfoVpnLinkInfo lInfo = 10; // local
  ZInfoVpnLinkInfo rInfo = 11; // remote
}

// ipsec left/right end-point info
message ZInfoVpnEndPoint {
  string id     = 1; // ipSec id
  string ipAddr = 2; // Ip Address
  uint32 port   = 3; // udp port
}

// Ike details
message ZInfoVpnConn {
  string id = 1;      // ike id
  string name = 2;    // connection name
  string version = 3; // ike-v1/v2
  uint64 estTime = 4; // in seconds
  string ikes = 5;    // ike proposals
  ZInfoVpnState state = 6; // ike state
  ZInfoVpnEndPoint lInfo = 7;  // local
  ZInfoVpnEndPoint rInfo = 8;  // remote
  repeated ZInfoVpnLink links = 10; // can be more than one
}

// ipsec level information
message ZInfoVpn {
  uint64 upTime = 1; // in seconds
  bool policyBased = 2; // Policy-based vs. VTI-based IPSEC VPN
  repeated string listeningIpAddrs = 3; //listening on
  repeated ZInfoVpnConn conn = 10; // Connection Information
}

// Lisp state information
message RlocState {
  string Rloc = 1;
  bool Reachable = 2;
}

message MapCacheEntry {
  string EID = 1;
  repeated RlocState Rlocs = 2;
}

message DatabaseMap {
  uint64 IID = 1;
  repeated MapCacheEntry MapCacheEntries = 2;
}

message DecapKey {
  string Rloc = 1;
  uint64 Port = 2;
  uint64 KeyCount = 3;
}

message ZInfoLisp {
  uint64 ItrCryptoPort = 1;
  uint64 EtrNatPort = 2;
  repeated string Interfaces = 3;
  repeated DatabaseMap DatabaseMaps = 4;
  repeated DecapKey DecapKeys = 5;
}

// Network Instance information
message ZInfoNetworkInstance {
  string networkID = 2;        // UUID
  string networkVersion = 3;   // From Network Instance config

  uint32 instType = 5;         // ZNetworkInstType
  string displayname = 6;      // From NetworkInstance config
  bool activated = 7;          // Forwarding enabled
  google.protobuf.Timestamp upTimeStamp = 8;
  ZInfoSW softwareList = 9;    // E.g., VPN version; XXX to be deprecated?

  string CurrentUplinkIntf = 10;  // current uplink interface in use by this NI
  string CurrentUplinkAlias = 11; // user defined namestring alias to this CurrentUplinkIntf, for future
  uint32 bridgeNum = 20;
  string bridgeName = 21;
  string bridgeIPAddr = 22;

  repeated ZmetIPAssignmentEntry ipAssignments = 23;
  repeated string bridgeIPSets = 24; // Union of all ipsets for the bridge
  repeated ZmetVifInfo vifs = 25; // Set of vifs on this bridge
  bool ipv4Eid = 26; // Track if this is a CryptoEid with IPv4 EIDs

  repeated ZioBundle assignedAdapters = 30;
  oneof InfoContent {
    ZInfoVpn vinfo = 31;
    ZInfoLisp linfo = 32;
  }
  repeated ErrorInfo networkErr = 40;
}

message UsageInfo {
  google.protobuf.Timestamp createTime = 1;
  uint32 refCount = 2;
  google.protobuf.Timestamp lastRefcountChangeTime = 3; // Last time when refCount changed
}

message VolumeResources {
  uint64 maxSizeBytes = 1; // From config
  uint64 curSizeBytes = 2; // Current disk usage
}

// Information about a particular volume based on the Volume config
message ZInfoVolume {
  string uuid = 1;
  string displayName = 2;
  UsageInfo usage = 3;
  VolumeResources resources = 4;
  ZSwState state = 5;
  uint32 progressPercentage = 6; // 0-100% Use depends on state i.e., download vs. verification vs. volume creation

  ErrorInfo volumeErr = 7;
}

message ContentResources {
  uint64 curSizeBytes = 1;  // Current disk usage
}

// ZInfoContentTree is used to describe the top of a tree, which has
// a UUID (and displayName) from the config ContentTree message.
// The components (or blobs) used by that are referenced by the compoentShaList
// and in a separate ZInfoBlobList info message
message ZInfoContentTree {
  string uuid = 1;
  string displayName = 2;
  string sha256 = 3;
  ContentResources resources = 4;
  UsageInfo usage = 5;
  ZSwState state = 6;   // INITIAL, DOWNLOAD_STARTED, DOWNLOADED, DELIVERED
  uint32 progressPercentage = 7; // 0-100% Depending on state if it is download or verification

  ErrorInfo err = 8;
  repeated string componentShaList = 9; // sha's for the referenced blobs
}

message ZInfoBlob {
  string sha256 = 1;
  ContentResources resources = 2;
  UsageInfo usage = 3;
  ZSwState state = 4;   // INITIAL, DOWNLOAD_STARTED, DOWNLOADED, DELIVERED
  uint32 progressPercentage = 5; // 0-100% Depending on state if it is download or verification
  ErrorInfo err = 6;
}

// For efficiency EVE can send many/all the blobs in one info message
message ZInfoBlobList {
  repeated ZInfoBlob blob = 1;
}

// This is the request payload for POST /api/v1/edgeDevice/info
// ZInfoMsg carries event-triggered state changes for one object (a device,
// an app instance, or a network instance). As such the messages are retransmitted
// until they make it to the controller, however subsequent state change to the
// object will replace any attempts to (re)transmit the previous message for
// that object.
message ZInfoMsg {
  ZInfoTypes ztype = 1;
  string devId = 2;
  oneof InfoContent {
    ZInfoDevice dinfo = 3;
    ZInfoApp ainfo = 5;
    // deprecated = 10;
    // deprecated = 11;
    ZInfoNetworkInstance niinfo = 12;
    ZInfoVolume vinfo = 13;
    ZInfoContentTree cinfo = 14;
    ZInfoBlobList binfo = 15;
  }
  google.protobuf.Timestamp atTimeStamp = 6;
}
