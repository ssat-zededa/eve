// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package logs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogEntry struct {
	Severity             string               `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"`
	Source               string               `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Iid                  string               `protobuf:"bytes,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Content              string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Msgid                uint64               `protobuf:"varint,5,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Filename             string               `protobuf:"bytes,8,opt,name=filename,proto3" json:"filename,omitempty"`
	Function             string               `protobuf:"bytes,9,opt,name=function,proto3" json:"function,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

func (m *LogEntry) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *LogEntry) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

func (m *LogEntry) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *LogEntry) GetMsgid() uint64 {
	if m != nil {
		return m.Msgid
	}
	return 0
}

func (m *LogEntry) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *LogEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogEntry) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *LogEntry) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

// This is the request payload for POST /api/v1/edgeDevice/logs
// ZInfoMsg carries device logs to the controller.
// The messages need to be retransmitted until they make it to the controller.
// The message is assumed to be protected by a TLS session bound to the
// device certificate.
type LogBundle struct {
	DevID                string               `protobuf:"bytes,1,opt,name=devID,proto3" json:"devID,omitempty"`
	Image                string               `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Log                  []*LogEntry          `protobuf:"bytes,3,rep,name=log,proto3" json:"log,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EveVersion           string               `protobuf:"bytes,5,opt,name=eveVersion,proto3" json:"eveVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogBundle) Reset()         { *m = LogBundle{} }
func (m *LogBundle) String() string { return proto.CompactTextString(m) }
func (*LogBundle) ProtoMessage()    {}
func (*LogBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

func (m *LogBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBundle.Unmarshal(m, b)
}
func (m *LogBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBundle.Marshal(b, m, deterministic)
}
func (m *LogBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBundle.Merge(m, src)
}
func (m *LogBundle) XXX_Size() int {
	return xxx_messageInfo_LogBundle.Size(m)
}
func (m *LogBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBundle.DiscardUnknown(m)
}

var xxx_messageInfo_LogBundle proto.InternalMessageInfo

func (m *LogBundle) GetDevID() string {
	if m != nil {
		return m.DevID
	}
	return ""
}

func (m *LogBundle) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *LogBundle) GetLog() []*LogEntry {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *LogBundle) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogBundle) GetEveVersion() string {
	if m != nil {
		return m.EveVersion
	}
	return ""
}

// This is the request payload for POST /api/v1/edgeDevice/apps/instances/id/<app-instance-uuid>/logs
type AppInstanceLogBundle struct {
	Log                  []*LogEntry          `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AppInstanceLogBundle) Reset()         { *m = AppInstanceLogBundle{} }
func (m *AppInstanceLogBundle) String() string { return proto.CompactTextString(m) }
func (*AppInstanceLogBundle) ProtoMessage()    {}
func (*AppInstanceLogBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{2}
}

func (m *AppInstanceLogBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppInstanceLogBundle.Unmarshal(m, b)
}
func (m *AppInstanceLogBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppInstanceLogBundle.Marshal(b, m, deterministic)
}
func (m *AppInstanceLogBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppInstanceLogBundle.Merge(m, src)
}
func (m *AppInstanceLogBundle) XXX_Size() int {
	return xxx_messageInfo_AppInstanceLogBundle.Size(m)
}
func (m *AppInstanceLogBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_AppInstanceLogBundle.DiscardUnknown(m)
}

var xxx_messageInfo_AppInstanceLogBundle proto.InternalMessageInfo

func (m *AppInstanceLogBundle) GetLog() []*LogEntry {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *AppInstanceLogBundle) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*LogEntry)(nil), "LogEntry")
	proto.RegisterMapType((map[string]string)(nil), "LogEntry.TagsEntry")
	proto.RegisterType((*LogBundle)(nil), "LogBundle")
	proto.RegisterType((*AppInstanceLogBundle)(nil), "AppInstanceLogBundle")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x4f, 0x6b, 0xdc, 0x30,
	0x10, 0xc5, 0xf1, 0x7a, 0x77, 0xb3, 0x9e, 0x5c, 0x8a, 0x1b, 0x8a, 0xd8, 0x42, 0xb3, 0xec, 0xa5,
	0x7b, 0xa9, 0x0c, 0xe9, 0xa1, 0xa1, 0xb7, 0x86, 0xe6, 0x10, 0xc8, 0xc9, 0x84, 0x1e, 0x7a, 0xd3,
	0xda, 0xb3, 0xaa, 0xa8, 0xac, 0x31, 0x96, 0x64, 0x48, 0x3f, 0x54, 0x3f, 0x4d, 0x3f, 0x50, 0x91,
	0xfc, 0x27, 0xed, 0x29, 0xe4, 0xa6, 0xdf, 0xcc, 0x1b, 0xf4, 0xde, 0x83, 0x4c, 0x93, 0xe4, 0x6d,
	0x47, 0x8e, 0xb6, 0x97, 0x92, 0x48, 0x6a, 0x2c, 0x22, 0x1d, 0xfd, 0xa9, 0x70, 0xaa, 0x41, 0xeb,
	0x44, 0xd3, 0x0e, 0x82, 0xfd, 0x9f, 0x05, 0x6c, 0xee, 0x49, 0xde, 0x1a, 0xd7, 0x3d, 0xe6, 0x5b,
	0xd8, 0x58, 0xec, 0xb1, 0x53, 0xee, 0x91, 0x25, 0xbb, 0xe4, 0x90, 0x95, 0x33, 0xe7, 0x6f, 0x60,
	0x6d, 0xc9, 0x77, 0x15, 0xb2, 0x45, 0xdc, 0x8c, 0x94, 0xbf, 0x82, 0x54, 0xa9, 0x9a, 0xa5, 0x71,
	0x18, 0x9e, 0x39, 0x83, 0xb3, 0x8a, 0x8c, 0x43, 0xe3, 0xd8, 0x32, 0x4e, 0x27, 0xcc, 0x2f, 0x60,
	0xd5, 0x58, 0xa9, 0x6a, 0xb6, 0xda, 0x25, 0x87, 0x65, 0x39, 0x40, 0xfe, 0x1e, 0x96, 0x4e, 0x48,
	0xcb, 0xd6, 0xbb, 0xf4, 0x70, 0x7e, 0xf5, 0x9a, 0x4f, 0x76, 0xf8, 0x83, 0x90, 0x36, 0xbe, 0xca,
	0x28, 0xc8, 0xaf, 0x21, 0x9b, 0xed, 0xb3, 0xb3, 0x5d, 0x72, 0x38, 0xbf, 0xda, 0xf2, 0x21, 0x20,
	0x9f, 0x02, 0xf2, 0x87, 0x49, 0x51, 0x3e, 0x89, 0x43, 0xb0, 0x93, 0xd2, 0x68, 0x44, 0x83, 0x6c,
	0x33, 0x04, 0x9b, 0x38, 0xee, 0xbc, 0xa9, 0x9c, 0x22, 0xc3, 0xb2, 0x71, 0x37, 0xf2, 0xf6, 0x13,
	0x64, 0xb3, 0x89, 0x90, 0xf4, 0x27, 0x4e, 0xc5, 0x84, 0x67, 0xc8, 0xd3, 0x0b, 0xed, 0xa7, 0x4a,
	0x06, 0xf8, 0xbc, 0xb8, 0x4e, 0xf6, 0xbf, 0x13, 0xc8, 0xee, 0x49, 0xde, 0x78, 0x53, 0x6b, 0x0c,
	0xba, 0x1a, 0xfb, 0xbb, 0xaf, 0xe3, 0xed, 0x00, 0x61, 0xaa, 0x1a, 0x21, 0xe7, 0xeb, 0x08, 0xf9,
	0x5b, 0x48, 0x35, 0x49, 0x96, 0xc6, 0x32, 0xb2, 0xb9, 0x8c, 0x32, 0x4c, 0xff, 0x6f, 0x60, 0xf9,
	0x92, 0x06, 0xde, 0x01, 0x60, 0x8f, 0xdf, 0xb0, 0xb3, 0x21, 0xe7, 0x2a, 0xfe, 0xf8, 0xcf, 0x64,
	0xdf, 0xc0, 0xc5, 0x97, 0xb6, 0xbd, 0x33, 0xd6, 0x09, 0x53, 0xe1, 0x93, 0xf5, 0xd1, 0x4e, 0xf2,
	0xbc, 0x9d, 0xc5, 0x0b, 0xec, 0xdc, 0xdc, 0xc2, 0x65, 0x45, 0x0d, 0xff, 0x85, 0x35, 0xd6, 0x82,
	0x57, 0x9a, 0x7c, 0xcd, 0xbd, 0xc5, 0xae, 0x57, 0xd5, 0x78, 0xfa, 0x7d, 0x2f, 0x95, 0xfb, 0xe1,
	0x8f, 0xbc, 0xa2, 0xa6, 0xd0, 0xa7, 0x0f, 0x58, 0x4b, 0x2c, 0xb0, 0xc7, 0x42, 0xb4, 0xaa, 0x90,
	0x54, 0x68, 0x92, 0xf6, 0xb8, 0x8e, 0xd2, 0x8f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x43, 0x77,
	0x65, 0x6d, 0xf2, 0x02, 0x00, 0x00,
}
